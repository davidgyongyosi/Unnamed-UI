{"version":3,"file":"ngx-unnamed.mjs","sources":["../../../src/lib/components/button/button.component.ts","../../../src/lib/components/input/input.directive.ts","../../../src/lib/components/input/input.component.ts","../../../src/public-api.ts","../../../src/ngx-unnamed.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    booleanAttribute,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ElementRef,\n    inject,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Renderer2,\n    SimpleChanges,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { fromEvent, startWith, Subject, takeUntil } from 'rxjs';\nimport { NxIconDirective } from 'ngx-unnamed-icons';\n\nexport type NxButtonVariants = 'primary' | 'secondary' | 'danger' | 'outline' | 'ghost' | 'dashed' | 'link' | null;\nexport type NxButtonShapes = 'circle' | 'round' | null;\nexport type NxButtonSizes = 'large' | 'default' | 'small';\n\n@Component({\n    selector: 'button[nx-button], a[nx-button]',\n    imports: [CommonModule],\n    standalone: true,\n    template: `\n        @if (nxLoading) {\n            <span class=\"spinner\"></span>\n        }\n        <ng-content></ng-content>\n    `,\n    styleUrls: ['./style/button.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'nx-btn',\n        '[class.nx-btn-primary]': `nxVariant === 'primary'`,\n        '[class.nx-btn-secondary]': `nxVariant === 'secondary'`,\n        '[class.nx-btn-danger]': `nxVariant === 'danger'`,\n        '[class.nx-btn-outline]': `nxVariant === 'outline'`,\n        '[class.nx-btn-ghost]': `nxVariant === 'ghost'`,\n        '[class.nx-btn-link]': `nxVariant === 'link'`,\n        '[class.nx-btn-dashed]': `nxVariant === 'dashed'`,\n        '[class.nx-btn-circle]': `nxShape === 'circle'`,\n        '[class.nx-btn-round]': `nxShape === 'round'`,\n        '[class.nx-btn-lg]': `nxSize === 'large'`,\n        '[class.nx-btn-sm]': `nxSize === 'small'`,\n        '[class.nx-btn-block]': `nxBlock`,\n        '[attr.tabindex]': 'disabled ? -1 : (tabIndex === null ? null : tabIndex)',\n        '[attr.disabled]': 'disabled || null',\n    },\n})\nexport class ButtonComponent implements OnDestroy, OnChanges, AfterViewInit, AfterContentInit, OnInit {\n    @ContentChild(NxIconDirective, { read: ElementRef }) nzIconDirectiveElement!: ElementRef;\n    @Input() nxVariant: NxButtonVariants = 'primary';\n    @Input() nxShape: NxButtonShapes = null;\n    @Input() nxSize: NxButtonSizes = 'default';\n    @Input({ transform: booleanAttribute }) nxLoading: boolean = false;\n    @Input({ transform: booleanAttribute }) disabled: boolean = false;\n    @Input({ transform: booleanAttribute }) ghost: boolean = false;\n    @Input({ transform: booleanAttribute }) danger: boolean = false;\n    @Input({ transform: booleanAttribute }) nxBlock: boolean = false;\n    @Input() tabIndex: number | null = null;\n\n    private destroy$ = new Subject<void>();\n    private loading$ = new Subject<boolean>();\n\n    private ngZone = inject(NgZone);\n    private elementRef = inject(ElementRef);\n    private cdr = inject(ChangeDetectorRef);\n    private renderer = inject(Renderer2);\n\n    ngOnInit(): void {\n        this.ngZone.runOutsideAngular(() => {\n            fromEvent<MouseEvent>(this.elementRef.nativeElement, 'click', { capture: true })\n                .pipe(takeUntil(this.destroy$))\n                .subscribe((event) => {\n                    if ((this.disabled && (event.target as HTMLElement)?.tagName === 'A') || this.nxLoading) {\n                        event.preventDefault();\n                        event.stopImmediatePropagation();\n                    }\n                });\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        const { nxLoading } = changes;\n        if (nxLoading) {\n            this.loading$.next(this.nxLoading);\n        }\n    }\n\n    ngAfterViewInit(): void {\n        this.insertSpan(this.elementRef.nativeElement.childNodes, this.renderer);\n    }\n\n    insertSpan(nodes: NodeList, renderer: Renderer2): void {\n        nodes.forEach((node) => {\n            if (node.nodeName === '#text') {\n                const span = renderer.createElement('span');\n                const parent = renderer.parentNode(node);\n                renderer.insertBefore(parent, span, node);\n                renderer.appendChild(span, node);\n            }\n        });\n    }\n\n    ngAfterContentInit(): void {\n        this.loading$\n            .pipe(\n                startWith(this.nxLoading),\n                //filter(() => !!this.nzIconDirectiveElement),\n                takeUntil(this.destroy$)\n            )\n            .subscribe((loading) => {\n                /*const nativeElement = this.nzIconDirectiveElement.nativeElement;\n        if (loading) {\n          this.renderer.setStyle(nativeElement, 'display', 'none');\n        } else {\n          this.renderer.removeStyle(nativeElement, 'display');\n        }*/\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\n","import { booleanAttribute, Directive, ElementRef, inject, input, OnInit, signal } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { startWith } from 'rxjs/operators';\n\nexport type NxInputSize = 'large' | 'default' | 'small';\nexport type NxInputVariant = 'outlined' | 'filled' | 'borderless';\nexport type NxInputStatus = 'error' | 'warning' | 'success' | '';\n\n@Directive({\n    selector: 'input[nx-input],textarea[nx-input]',\n    exportAs: 'nxInput',\n    standalone: true,\n    host: {\n        class: 'nx-input',\n        '[class.nx-input-disabled]': 'finalDisabled()',\n        '[class.nx-input-borderless]': `nxVariant() === 'borderless'`,\n        '[class.nx-input-filled]': `nxVariant() === 'filled'`,\n        '[class.nx-input-outlined]': `nxVariant() === 'outlined'`,\n        '[class.nx-input-lg]': `nxSize() === 'large'`,\n        '[class.nx-input-sm]': `nxSize() === 'small'`,\n        '[class.nx-input-status-error]': `nxStatus() === 'error'`,\n        '[class.nx-input-status-warning]': `nxStatus() === 'warning'`,\n        '[class.nx-input-status-success]': `nxStatus() === 'success'`,\n        '[attr.disabled]': 'finalDisabled() || null',\n        '[attr.readonly]': 'readonly() || null',\n    },\n})\nexport class InputDirective implements OnInit {\n    private elementRef = inject(ElementRef);\n    readonly ngControl = inject(NgControl, { self: true, optional: true });\n\n    readonly value = signal<string>(this.elementRef.nativeElement.value);\n\n    readonly nxVariant = input<NxInputVariant>('outlined');\n    readonly nxSize = input<NxInputSize>('default');\n    readonly nxStatus = input<NxInputStatus>('');\n    readonly disabled = input(false, { transform: booleanAttribute });\n    readonly readonly = input(false, { transform: booleanAttribute });\n\n    readonly controlDisabled = signal(false);\n    readonly finalDisabled = this.ngControl ? this.controlDisabled : this.disabled;\n\n    ngOnInit(): void {\n        // Track form control disabled state\n        this.ngControl?.statusChanges?.pipe(startWith(null), takeUntilDestroyed()).subscribe(() => {\n            this.controlDisabled.set(!!this.ngControl!.disabled);\n        });\n\n        // Track form control value changes\n        this.ngControl?.valueChanges?.pipe(takeUntilDestroyed()).subscribe((value) => {\n            this.value.set(value);\n        });\n    }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { InputDirective } from './input.directive';\n\n/**\n * Input Component Wrapper\n * This component provides styling encapsulation for the input directive\n */\n@Component({\n    selector: 'nx-input-wrapper',\n    template: '',\n    standalone: true,\n    styleUrls: ['./style/input.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class InputComponent {}\n\n// Re-export the directive and types for convenience\nexport { InputDirective } from './input.directive';\nexport type { NxInputSize, NxInputStatus, NxInputVariant } from './input.directive';\n","/*\n * Public API Surface of ngx-unnamed\n */\nexport * as NxButton from './lib/components/button/button.component';\nexport * as NxInput from './lib/components/input/input.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["startWith"],"mappings":"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"}