{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "advancedColumns",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TableColumn[]",
                "defaultValue": "[\n    { key: 'id', title: 'ID', width: '80px', sortable: true, fixed: 'left' },\n    { key: 'name', title: 'Name', sortable: true, fixed: 'left' },\n    { key: 'age', title: 'Age', width: '100px', sortable: true, align: 'center' },\n    { key: 'email', title: 'Email', sortable: false },\n    { key: 'status', title: 'Status', width: '120px', sortable: true },\n    { key: 'salary', title: 'Salary', width: '120px', sortable: true, align: 'right' }\n]"
            },
            {
                "name": "AllSizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 8px; flex-wrap: wrap; align-items: center;\">\n        <button nx-button nxSize=\"small\">Small</button>\n        <button nx-button nxSize=\"default\">Default</button>\n        <button nx-button nxSize=\"large\">Large</button>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "AllSizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 12px;\">\n        <input nx-input nxSize=\"small\" placeholder=\"Small input\" />\n        <input nx-input nxSize=\"default\" placeholder=\"Default input\" />\n        <input nx-input nxSize=\"large\" placeholder=\"Large input\" />\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "AllStates",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 12px;\">\n        <input nx-input placeholder=\"Default state\" />\n        <input nx-input nxStatus=\"error\" value=\"Error state\" />\n        <input nx-input nxStatus=\"warning\" value=\"Warning state\" />\n        <input nx-input disabled value=\"Disabled state\" />\n        <input nx-input readonly value=\"Readonly state\" />\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "AllVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; max-width: 600px;\">\n        <nx-alert type=\"info\" message=\"Info Alert\" description=\"This is an informational alert.\"></nx-alert>\n        <nx-alert type=\"success\" message=\"Success Alert\" description=\"Operation completed successfully.\"></nx-alert>\n        <nx-alert type=\"warning\" message=\"Warning Alert\" description=\"Please review the information provided.\"></nx-alert>\n        <nx-alert type=\"error\" message=\"Error Alert\" description=\"An error occurred while processing.\"></nx-alert>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "AllVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 8px; flex-wrap: wrap; align-items: center;\">\n        <button nx-button nxVariant=\"primary\">Primary</button>\n        <button nx-button nxVariant=\"secondary\">Secondary</button>\n        <button nx-button nxVariant=\"danger\">Danger</button>\n        <button nx-button nxVariant=\"outline\">Outline</button>\n        <button nx-button nxVariant=\"ghost\">Ghost</button>\n        <button nx-button nxVariant=\"dashed\">Dashed</button>\n        <button nx-button nxVariant=\"link\">Link</button>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Banner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    banner: true,\n    message: 'This is a banner alert',\n    description: 'Banner alerts span the full width and have no border radius.',\n  },\n}"
            },
            {
                "name": "BannerExamples",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; max-width: 800px;\">\n        <nx-alert\n          banner=\"true\"\n          type=\"info\"\n          closable=\"true\"\n          message=\"Site-wide notification\"\n          description=\"This banner alert spans the full width and can be dismissed.\">\n        </nx-alert>\n        <nx-alert\n          banner=\"true\"\n          type=\"warning\"\n          message=\"Maintenance notice\"\n          description=\"Scheduled maintenance will occur on Sunday from 2-4 AM EST.\">\n        </nx-alert>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns\n    }\n}"
            },
            {
                "name": "basicColumns",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TableColumn[]",
                "defaultValue": "[\n    { key: 'id', title: 'ID', width: '80px', sortable: true },\n    { key: 'name', title: 'Name', sortable: true },\n    { key: 'age', title: 'Age', width: '100px', sortable: true, align: 'center' },\n    { key: 'email', title: 'Email', sortable: false }\n]"
            },
            {
                "name": "Block",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxBlock: true,\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Block level button takes full width of its container.',\n      },\n    },\n  },\n}"
            },
            {
                "name": "Bordered",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        bordered: true\n    }\n}"
            },
            {
                "name": "Circle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `<button nx-button nxShape=\"circle\">üîç</button>`,\n  }),\n}"
            },
            {
                "name": "Clearable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxAllowClear: true,\n    nxPlaceholder: 'Clearable select',\n  },\n}"
            },
            {
                "name": "Closable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    closable: true,\n    message: 'This alert can be closed',\n    description: 'Click the X button in the top-right corner to dismiss this alert.',\n  },\n}"
            },
            {
                "name": "Compact",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"vertical\" className=\"nx-form-compact\" style=\"width: 400px;\">\n        <nx-form-item>\n          <nx-form-label label=\"Username\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Enter username\" style=\"width: 100%; padding: 4px 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Password\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"password\" placeholder=\"Enter password\" style=\"width: 100%; padding: 4px 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-control>\n            <button type=\"submit\" style=\"padding: 4px 12px; background: #1890ff; color: white; border: none; border-radius: 6px; cursor: pointer;\">Sign In</button>\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
            },
            {
                "name": "Complex",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: advancedColumns,\n        bordered: true,\n        hoverable: true,\n        striped: true,\n        rowSelection: {\n            selectedRowKeys: [],\n            mode: 'multiple',\n            rowKey: 'id',\n            selectOnRowClick: false,\n            disabledRowKeys: [3, 6] // Disable some rows\n        } as TableSelection,\n        pagination: {\n            current: 1,\n            pageSize: 5,\n            total: sampleData.length,\n            pageSizeOptions: [5, 10, 20],\n            showQuickJumper: true,\n            showSizeChanger: true\n        } as TablePagination\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Complex table demonstrating all features: sorting, pagination, row selection, disabled rows, and styling options.'\n            }\n        }\n    }\n}"
            },
            {
                "name": "ComplexForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <div style=\"max-width: 800px; margin: 0 auto;\">\n        <h2 style=\"margin-bottom: 24px;\">User Registration</h2>\n\n        <nx-form layout=\"horizontal\" labelWidth=\"120px\">\n          <nx-form-item>\n            <nx-form-label label=\"Account Type\" required=\"true\"></nx-form-label>\n            <nx-form-control>\n              <select style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n                <option>Personal</option>\n                <option>Business</option>\n                <option>Enterprise</option>\n              </select>\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"\"></nx-form-label>\n            <nx-form-control>\n              <hr style=\"margin: 16px 0; border: none; border-top: 1px solid #f0f0f0;\">\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"First Name\" required=\"true\"></nx-form-label>\n            <nx-form-control>\n              <input type=\"text\" placeholder=\"Enter first name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"Last Name\" required=\"true\"></nx-form-label>\n            <nx-form-control>\n              <input type=\"text\" placeholder=\"Enter last name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item validateStatus=\"success\" hasFeedback=\"true\">\n            <nx-form-label label=\"Email\" required=\"true\"></nx-form-label>\n            <nx-form-control>\n              <input type=\"email\" value=\"user@example.com\" style=\"width: 100%; padding: 8px; border: 1px solid #52c41a; border-radius: 6px;\">\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item validateStatus=\"error\" errorTip=\"Password is too short\" hasFeedback=\"true\">\n            <nx-form-label label=\"Password\" required=\"true\"></nx-form-label>\n            <nx-form-control>\n              <input type=\"password\" value=\"123\" style=\"width: 100%; padding: 8px; border: 1px solid #ff4d4f; border-radius: 6px;\">\n            </nx-form-control>\n            <div class=\"nx-form-item-extra\">Password must be at least 8 characters long</div>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"\"></nx-form-label>\n            <nx-form-control>\n              <hr style=\"margin: 16px 0; border: none; border-top: 1px solid #f0f0f0;\">\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"Phone\"></nx-form-label>\n            <nx-form-control>\n              <input type=\"tel\" placeholder=\"+1 (555) 000-0000\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"Company\"></nx-form-label>\n            <nx-form-control>\n              <input type=\"text\" placeholder=\"Company name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"Country\"></nx-form-label>\n            <nx-form-control>\n              <select style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n                <option>United States</option>\n                <option>Canada</option>\n                <option>United Kingdom</option>\n                <option>Australia</option>\n              </select>\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"\"></nx-form-label>\n            <nx-form-control>\n              <div style=\"margin-top: 24px;\">\n                <button type=\"submit\" style=\"padding: 8px 16px; background: #1890ff; color: white; border: none; border-radius: 6px; cursor: pointer; margin-right: 8px;\">Register</button>\n                <button type=\"button\" style=\"padding: 8px 16px; background: white; color: #1890ff; border: 1px solid #1890ff; border-radius: 6px; cursor: pointer;\">Cancel</button>\n              </div>\n            </nx-form-control>\n          </nx-form-item>\n        </nx-form>\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "ComponentShowcase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    imports: [CommonModule, FormsModule],\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 24px; padding: 20px; max-width: 600px;\">\n        <h3>Component Showcase</h3>\n\n        <!-- Button Showcase -->\n        <div>\n          <h4>Buttons</h4>\n          <div style=\"display: flex; gap: 8px; flex-wrap: wrap; margin-bottom: 16px;\">\n            <button nx-button [nxVariant]=\"buttonVariant\" [nxSize]=\"buttonSize\" [disabled]=\"buttonDisabled\" [nxLoading]=\"buttonLoading\">\n              <span nxIcon type=\"user\" theme=\"outline\"></span>\n              {{ buttonText }}\n            </button>\n            <button nx-button nxVariant=\"secondary\" (click)=\"randomizeButton()\">Randomize</button>\n          </div>\n\n          <div style=\"display: flex; gap: 12px; align-items: center;\">\n            <label>Variant:</label>\n            <select [(ngModel)]=\"buttonVariant\" style=\"padding: 4px;\">\n              <option value=\"primary\">Primary</option>\n              <option value=\"secondary\">Secondary</option>\n              <option value=\"danger\">Danger</option>\n              <option value=\"outline\">Outline</option>\n              <option value=\"ghost\">Ghost</option>\n            </select>\n\n            <label>Size:</label>\n            <select [(ngModel)]=\"buttonSize\" style=\"padding: 4px;\">\n              <option value=\"small\">Small</option>\n              <option value=\"default\">Default</option>\n              <option value=\"large\">Large</option>\n            </select>\n\n            <label><input type=\"checkbox\" [(ngModel)]=\"buttonDisabled\"> Disabled</label>\n            <label><input type=\"checkbox\" [(ngModel)]=\"buttonLoading\"> Loading</label>\n          </div>\n\n          <div style=\"margin-top: 8px;\">\n            <input nx-input placeholder=\"Button text\" [(ngModel)]=\"buttonText\" style=\"max-width: 200px;\">\n          </div>\n        </div>\n\n        <!-- Input Showcase -->\n        <div>\n          <h4>Inputs</h4>\n          <div style=\"display: flex; gap: 12px; margin-bottom: 16px;\">\n            <input nx-input [placeholder]=\"inputPlaceholder\" [nxSize]=\"inputSize\" [disabled]=\"inputDisabled\" [nxStatus]=\"inputStatus\" [(ngModel)]=\"inputValue\">\n            <button nx-button nxVariant=\"outline\" (click)=\"clearInput()\">Clear</button>\n          </div>\n\n          <div style=\"display: flex; gap: 12px; align-items: center;\">\n            <label>Size:</label>\n            <select [(ngModel)]=\"inputSize\" style=\"padding: 4px;\">\n              <option value=\"small\">Small</option>\n              <option value=\"default\">Default</option>\n              <option value=\"large\">Large</option>\n            </select>\n\n            <label>Status:</label>\n            <select [(ngModel)]=\"inputStatus\" style=\"padding: 4px;\">\n              <option value=\"default\">Default</option>\n              <option value=\"error\">Error</option>\n              <option value=\"warning\">Warning</option>\n            </select>\n\n            <label><input type=\"checkbox\" [(ngModel)]=\"inputDisabled\"> Disabled</label>\n          </div>\n\n          <div style=\"margin-top: 8px;\">\n            <input nx-input placeholder=\"Placeholder text\" [(ngModel)]=\"inputPlaceholder\" style=\"max-width: 200px;\">\n          </div>\n        </div>\n\n        <!-- Icon Showcase -->\n        <div>\n          <h4>Icons</h4>\n          <div style=\"display: flex; gap: 16px; align-items: center; margin-bottom: 16px;\">\n            <span nxIcon [type]=\"selectedIcon\" [theme]=\"iconTheme\" [spin]=\"iconSpin\" [size]=\"iconSize\"></span>\n            <span>{{ selectedIcon }} ({{ iconTheme }})</span>\n          </div>\n\n          <div style=\"display: flex; gap: 12px; align-items: center; flex-wrap: wrap;\">\n            <label>Icon:</label>\n            <select [(ngModel)]=\"selectedIcon\" style=\"padding: 4px;\">\n              <option value=\"user\">User</option>\n              <option value=\"setting\">Settings</option>\n              <option value=\"heart\">Heart</option>\n              <option value=\"star\">Star</option>\n              <option value=\"check\">Check</option>\n              <option value=\"close\">Close</option>\n              <option value=\"loading\">Loading</option>\n            </select>\n\n            <label>Theme:</label>\n            <select [(ngModel)]=\"iconTheme\" style=\"padding: 4px;\">\n              <option value=\"outline\">Outline</option>\n              <option value=\"fill\">Fill</option>\n              <option value=\"twotone\">Twotone</option>\n            </select>\n\n            <label>Size:</label>\n            <input type=\"number\" [(ngModel)]=\"iconSize\" min=\"12\" max=\"48\" style=\"width: 60px; padding: 4px;\">\n\n            <label><input type=\"checkbox\" [(ngModel)]=\"iconSpin\"> Spin</label>\n          </div>\n        </div>\n      </div>\n    `,\n    props: {\n      // Button props\n      buttonText: 'Click Me',\n      buttonVariant: 'primary',\n      buttonSize: 'default',\n      buttonDisabled: false,\n      buttonLoading: false,\n\n      // Input props\n      inputValue: '',\n      inputPlaceholder: 'Type something...',\n      inputSize: 'default',\n      inputStatus: 'default',\n      inputDisabled: false,\n\n      // Icon props\n      selectedIcon: 'user',\n      iconTheme: 'outline',\n      iconSize: 24,\n      iconSpin: false,\n\n      // Methods\n      randomizeButton() {\n        const variants = ['primary', 'secondary', 'danger', 'outline', 'ghost'];\n        const sizes = ['small', 'default', 'large'];\n        const texts = ['Click Me', 'Submit', 'Save', 'Cancel', 'Delete'];\n\n        this.buttonVariant = variants[Math.floor(Math.random() * variants.length)];\n        this.buttonSize = sizes[Math.floor(Math.random() * sizes.length)];\n        this.buttonText = texts[Math.floor(Math.random() * texts.length)];\n        this.buttonDisabled = Math.random() > 0.5;\n        this.buttonLoading = Math.random() > 0.7;\n      },\n\n      clearInput() {\n        this.inputValue = '';\n      }\n    }\n  }),\n}"
            },
            {
                "name": "Confirmation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Confirm Action',\n        nxOkDanger: false,\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [nxOkDanger]=\"nxOkDanger\"\n                [visible]=\"visible\">\n\n                <p>Are you sure you want to perform this action?</p>\n                <p>This action cannot be undone.</p>\n            </nx-modal>\n        `,\n    }),\n}"
            },
            {
                "name": "CustomFooter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Custom Footer Modal',\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [visible]=\"visible\">\n\n                <p>This modal has a custom footer with additional actions.</p>\n\n                <ng-template #footer>\n                    <button nx-button nxVariant=\"ghost\">Previous</button>\n                    <button nx-button nxVariant=\"secondary\">Save Draft</button>\n                    <button nx-button nxVariant=\"primary\">Submit</button>\n                </ng-template>\n            </nx-modal>\n        `,\n    }),\n}"
            },
            {
                "name": "CustomIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    icon: 'warning',\n    message: 'Alert with custom icon',\n    description: 'This alert uses a custom icon instead of the default one.',\n  },\n}"
            },
            {
                "name": "CustomTemplates",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-table\n                [data]=\"data\"\n                [columns]=\"columns\"\n                [bordered]=\"true\">\n\n                <!-- Custom status cell template -->\n                <ng-template #statusCell let-value let-record=\"record\">\n                    <span\n                        class=\"status-badge\"\n                        [class.status-active]=\"value === 'Active'\"\n                        [class.status-inactive]=\"value === 'Inactive'\">\n                        {{ value }}\n                    </span>\n                </ng-template>\n\n                <!-- Custom salary cell template -->\n                <ng-template #salaryCell let-value>\n                    <strong>\\${{ value.toLocaleString() }}</strong>\n                </ng-template>\n\n                <!-- Custom header template -->\n                <ng-template #nameHeader let-column>\n                    <strong>{{ column.title }}</strong>\n                    <span style=\"font-size: 12px; color: #666;\"> (Full Name)</span>\n                </ng-template>\n            </nx-table>\n\n            <style>\n                .status-badge {\n                    padding: 4px 8px;\n                    border-radius: 12px;\n                    font-size: 12px;\n                    font-weight: 500;\n                }\n                .status-active {\n                    background: #f0f9ff;\n                    color: #0369a1;\n                }\n                .status-inactive {\n                    background: #f5f5f5;\n                    color: #666;\n                }\n            </style>\n        `\n    }),\n    args: {\n        data: sampleData,\n        columns: [\n            { key: 'id', title: 'ID', width: '80px', sortable: true },\n            { key: 'name', title: 'Name', sortable: true },\n            { key: 'age', title: 'Age', width: '100px', sortable: true, align: 'center' },\n            { key: 'email', title: 'Email', sortable: false },\n            {\n                key: 'status',\n                title: 'Status',\n                width: '120px',\n                sortable: true\n            },\n            {\n                key: 'salary',\n                title: 'Salary',\n                width: '120px',\n                sortable: true,\n                align: 'right'\n            }\n        ]\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Table with custom cell and header templates. Status column shows colored badges, salary column shows formatted currency, and name header has custom styling.'\n            }\n        }\n    }\n}"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxVariant: 'danger',\n  },\n}"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Delete Confirmation',\n        nxOkDanger: true,\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [nxOkDanger]=\"nxOkDanger\"\n                [visible]=\"visible\">\n\n                <p><strong>Warning:</strong> This will permanently delete the selected item.</p>\n                <p>Are you sure you want to continue?</p>\n            </nx-modal>\n        `,\n    }),\n}"
            },
            {
                "name": "Dashed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxVariant: 'dashed',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    message: 'This is an informational alert message',\n    description: 'Here is some additional information to help the user understand the context.',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxVariant: 'primary',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input placeholder=\"Enter text here\" />`,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxPlaceholder: 'Select an option',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        nxTitle: 'Basic Modal',\n        visible: true,\n        nxSize: 'default',\n        nxMask: true,\n        nxMaskClosable: true,\n        nxKeyboard: true,\n        nxOkText: 'OK',\n        nxCancelText: 'Cancel',\n        nxOkDanger: false,\n        nxLoading: false,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [nxSize]=\"nxSize\"\n                [nxMask]=\"nxMask\"\n                [nxMaskClosable]=\"nxMaskClosable\"\n                [nxKeyboard]=\"nxKeyboard\"\n                [nxOkText]=\"nxOkText\"\n                [nxCancelText]=\"nxCancelText\"\n                [nxOkDanger]=\"nxOkDanger\"\n                [nxLoading]=\"nxLoading\"\n                [visible]=\"visible\"\n                (nxOnOk)=\"onOk()\"\n                (nxOnCancel)=\"onCancel()\"\n                (nxOnClose)=\"onClose()\">\n\n                <p>This is the modal content. You can put any content here including forms, text, or other components.</p>\n                <p>Modals are great for confirmation dialogs, forms, or important information that requires user attention.</p>\n            </nx-modal>\n\n            <div style=\"text-align: center; margin-top: 20px;\">\n                <button nx-button (click)=\"visible = true\">Open Modal</button>\n            </div>\n        `,\n    }),\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: true,\n  },\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input disabled value=\"Disabled input\" />`,\n  }),\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"vertical\" disabled=\"true\" style=\"width: 400px;\">\n        <nx-form-item>\n          <nx-form-label label=\"Name\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" value=\"John Doe\" disabled style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px; background: #f5f5f5;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Email\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"email\" value=\"john@example.com\" disabled style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px; background: #f5f5f5;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Status\"></nx-form-label>\n          <nx-form-control>\n            <select disabled style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px; background: #f5f5f5;\">\n              <option>Active</option>\n              <option>Inactive</option>\n            </select>\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-control>\n            <button type=\"submit\" disabled style=\"padding: 8px 16px; background: #d9d9d9; color: white; border: none; border-radius: 6px; cursor: not-allowed;\">Save Changes</button>\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxDisabled: true,\n    nxPlaceholder: 'Disabled select',\n  },\n}"
            },
            {
                "name": "Email",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input type=\"email\" placeholder=\"Enter email\" />`,\n  }),\n}"
            },
            {
                "name": "Empty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        data: [],\n        columns: basicColumns,\n        emptyText: 'No employees found'\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Table with empty state. Shows custom message when no data is available.'\n            }\n        }\n    }\n}"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    type: 'error',\n    message: 'Error: Unable to process your request',\n    description: 'An unexpected error occurred. Please try again later or contact support if the issue persists.',\n  },\n}"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input nxStatus=\"error\" value=\"Invalid input\" />`,\n  }),\n}"
            },
            {
                "name": "FormExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <form style=\"display: flex; flex-direction: column; gap: 16px; max-width: 300px;\">\n        <div style=\"display: flex; flex-direction: column; gap: 4px;\">\n          <label for=\"name\">Name</label>\n          <input nx-input id=\"name\" placeholder=\"Enter your name\" />\n        </div>\n        <div style=\"display: flex; flex-direction: column; gap: 4px;\">\n          <label for=\"email\">Email</label>\n          <input nx-input id=\"email\" type=\"email\" placeholder=\"Enter your email\" />\n        </div>\n        <div style=\"display: flex; flex-direction: column; gap: 4px;\">\n          <label for=\"password\">Password</label>\n          <input nx-input id=\"password\" type=\"password\" placeholder=\"Enter your password\" />\n        </div>\n      </form>\n    `,\n  }),\n}"
            },
            {
                "name": "Fullscreen",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Fullscreen Modal',\n        nxSize: 'fullscreen',\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [nxSize]=\"nxSize\"\n                [visible]=\"visible\">\n\n                <div style=\"text-align: center; padding: 50px;\">\n                    <h2>Fullscreen Modal</h2>\n                    <p>This modal takes up the entire viewport.</p>\n                    <p>Perfect for:</p>\n                    <ul style=\"text-align: left; display: inline-block;\">\n                        <li>Image galleries</li>\n                        <li>Video players</li>\n                        <li>Complex forms</li>\n                        <li>Document viewers</li>\n                    </ul>\n                </div>\n            </nx-modal>\n        `,\n    }),\n}"
            },
            {
                "name": "Ghost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxVariant: 'ghost',\n  },\n}"
            },
            {
                "name": "Horizontal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"horizontal\" labelWidth=\"120px\" style=\"width: 500px;\">\n        <nx-form-item>\n          <nx-form-label label=\"Name\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Enter your name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Email\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"email\" placeholder=\"Enter your email\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Company\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Enter your company\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"\"></nx-form-label>\n          <nx-form-control>\n            <button type=\"submit\" style=\"padding: 8px 16px; background: #1890ff; color: white; border: none; border-radius: 6px; cursor: pointer;\">Submit</button>\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
            },
            {
                "name": "Inline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"inline\" style=\"max-width: 800px;\">\n        <nx-form-item>\n          <nx-form-label label=\"Search\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Search...\" style=\"padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Category\"></nx-form-label>\n          <nx-form-control>\n            <select style=\"padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n              <option>All</option>\n              <option>Products</option>\n              <option>Services</option>\n            </select>\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-control>\n            <button type=\"submit\" style=\"padding: 8px 16px; background: #1890ff; color: white; border: none; border-radius: 6px; cursor: pointer;\">Search</button>\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; max-width: 600px;\">\n        <nx-alert\n          type=\"info\"\n          closable=\"true\"\n          message=\"Interactive Alert\"\n          description=\"Try closing this alert using the X button.\">\n        </nx-alert>\n        <nx-alert\n          type=\"success\"\n          closable=\"true\"\n          message=\"Another closable alert\"\n          description=\"This one can also be dismissed.\">\n        </nx-alert>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    render: InteractiveTemplate,\n    parameters: {\n        docs: {\n            description: {\n                story: 'Interactive demo showing different modal sizes and behaviors.',\n            },\n        },\n    },\n}"
            },
            {
                "name": "InteractiveDemo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            onSortChange: action('sortChange'),\n            onSelectionChange: action('selectionChange'),\n            onPageChange: action('pageChange'),\n            onRowClick: action('rowClick')\n        },\n        template: `\n            <div style=\"padding: 20px;\">\n                <div style=\"margin-bottom: 20px;\">\n                    <h3>Interactive Table Demo</h3>\n                    <p>Click column headers to sort, select rows, and navigate pages. Check the Actions panel for event details.</p>\n                </div>\n\n                <nx-table\n                    [data]=\"data\"\n                    [columns]=\"columns\"\n                    [bordered]=\"true\"\n                    [hoverable]=\"true\"\n                    [rowSelection]=\"rowSelection\"\n                    [pagination]=\"pagination\"\n                    (sortChange)=\"onSortChange($event)\"\n                    (selectionChange)=\"onSelectionChange($event)\"\n                    (pageChange)=\"onPageChange($event)\"\n                    (rowClick)=\"onRowClick($event)\">\n                </nx-table>\n            </div>\n        `\n    }),\n    args: {\n        data: sampleData,\n        columns: advancedColumns,\n        rowSelection: {\n            selectedRowKeys: [],\n            mode: 'multiple',\n            rowKey: 'id',\n            selectOnRowClick: false\n        } as TableSelection,\n        pagination: {\n            current: 1,\n            pageSize: 5,\n            total: sampleData.length,\n            pageSizeOptions: [5, 10],\n            showQuickJumper: true,\n            showSizeChanger: true\n        } as TablePagination\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Interactive demo with event handling. All table events are logged in the Actions panel.'\n            }\n        }\n    }\n}"
            },
            {
                "name": "InteractiveForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    imports: [CommonModule, FormsModule],\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; max-width: 400px; padding: 20px;\">\n        <h3>Interactive Form</h3>\n\n        <div style=\"display: flex; flex-direction: column; gap: 8px;\">\n          <label for=\"username\">Username</label>\n          <input nx-input id=\"username\" placeholder=\"Enter username\" [(ngModel)]=\"username\">\n        </div>\n\n        <div style=\"display: flex; flex-direction: column; gap: 8px;\">\n          <label for=\"email\">Email</label>\n          <input nx-input id=\"email\" type=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"email\">\n        </div>\n\n        <div style=\"display: flex; flex-direction: column; gap: 8px;\">\n          <label for=\"password\">Password</label>\n          <input nx-input id=\"password\" type=\"password\" placeholder=\"Enter password\" [(ngModel)]=\"password\">\n        </div>\n\n        <div style=\"display: flex; gap: 8px; margin-top: 16px;\">\n          <button nx-button nxVariant=\"primary\" (click)=\"submitForm()\">Submit</button>\n          <button nx-button nxVariant=\"outline\" (click)=\"resetForm()\">Reset</button>\n        </div>\n\n        <div *ngIf=\"submittedData\" style=\"margin-top: 16px; padding: 12px; background: #f5f5f5; border-radius: 4px;\">\n          <strong>Form Data:</strong>\n          <pre>{{ submittedData | json }}</pre>\n        </div>\n      </div>\n    `,\n    props: {\n      username: '',\n      email: '',\n      password: '',\n      submittedData: null,\n      submitForm() {\n        this.submittedData = {\n          username: this.username,\n          email: this.email,\n          password: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢'\n        };\n      },\n      resetForm() {\n        this.username = '';\n        this.email = '';\n        this.password = '';\n        this.submittedData = null;\n      }\n    }\n  }),\n}"
            },
            {
                "name": "InteractiveStates",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 8px; flex-wrap: wrap; align-items: center;\">\n        <button nx-button>Normal</button>\n        <button nx-button [disabled]=\"true\">Disabled</button>\n        <button nx-button [nxLoading]=\"true\">Loading</button>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "InteractiveTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<ModalComponent>",
                "defaultValue": "(args) => ({\n    props: {\n        ...args,\n        isVisible: false,\n        modalSize: 'default',\n        handleOk: () => {\n            console.log('Modal OK clicked');\n            args.visible = false;\n        },\n        handleCancel: () => {\n            console.log('Modal Cancel clicked');\n            args.visible = false;\n        },\n        handleClose: () => {\n            console.log('Modal closed');\n            args.visible = false;\n        },\n    },\n    template: `\n        <div style=\"text-align: center; padding: 40px;\">\n            <h2>Interactive Modal Demo</h2>\n            <p>Click the buttons below to open different modal configurations:</p>\n\n            <div style=\"display: flex; gap: 12px; justify-content: center; flex-wrap: wrap; margin-top: 20px;\">\n                <button nx-button (click)=\"isVisible = true; modalSize = 'small'\">Small Modal</button>\n                <button nx-button (click)=\"isVisible = true; modalSize = 'default'\">Default Modal</button>\n                <button nx-button (click)=\"isVisible = true; modalSize = 'large'\">Large Modal</button>\n                <button nx-button (click)=\"isVisible = true; modalSize = 'fullscreen'\">Fullscreen Modal</button>\n            </div>\n\n            <nx-modal\n                [nxTitle]=\"'Interactive Modal (' + modalSize + ')'\"\n                [nxSize]=\"modalSize\"\n                [visible]=\"isVisible\"\n                (nxOnOk)=\"handleOk()\"\n                (nxOnCancel)=\"handleCancel()\"\n                (nxOnClose)=\"handleClose()\">\n\n                <h3>Modal Content</h3>\n                <p>This is an interactive modal with size: <strong>{{modalSize}}</strong></p>\n                <p>You can close this modal by:</p>\n                <ul style=\"text-align: left;\">\n                    <li>Clicking the OK or Cancel buttons</li>\n                    <li>Clicking the √ó close button</li>\n                    <li>Pressing the Escape key</li>\n                    <li>Clicking the backdrop (if enabled)</li>\n                </ul>\n            </nx-modal>\n        </div>\n    `,\n})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxSize: 'large',\n  },\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input nxSize=\"large\" placeholder=\"Large input\" />`,\n  }),\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"vertical\" className=\"nx-form-large\" style=\"width: 500px;\">\n        <nx-form-item>\n          <nx-form-label label=\"Event Title\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Enter event title\" style=\"width: 100%; padding: 12px 16px; border: 1px solid #d9d9d9; border-radius: 6px; font-size: 16px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Description\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <textarea placeholder=\"Describe your event\" rows=\"6\" style=\"width: 100%; padding: 12px 16px; border: 1px solid #d9d9d9; border-radius: 6px; font-size: 16px; resize: vertical;\"></textarea>\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Organizer\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Event organizer\" style=\"width: 100%; padding: 12px 16px; border: 1px solid #d9d9d9; border-radius: 6px; font-size: 16px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-control>\n            <button type=\"submit\" style=\"padding: 12px 24px; background: #1890ff; color: white; border: none; border-radius: 6px; cursor: pointer; font-size: 16px;\">Create Event</button>\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxSize: 'large',\n    nxPlaceholder: 'Large select',\n  },\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        size: 'large'\n    }\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Large Modal',\n        nxSize: 'large',\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [nxSize]=\"nxSize\"\n                [visible]=\"visible\">\n\n                <h3>Large Modal Content</h3>\n                <p>This modal has more space for complex content.</p>\n                <p>You can include:</p>\n                <ul>\n                    <li>Detailed forms</li>\n                    <li>Tables with data</li>\n                    <li>Complex workflows</li>\n                    <li>Rich content with images</li>\n                </ul>\n                <p>The large size provides 880px width for your content.</p>\n            </nx-modal>\n        `,\n    }),\n}"
            },
            {
                "name": "largeOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SelectOption[]",
                "defaultValue": "Array.from({ length: 1000 }, (_, i) => ({\n  value: `item-${i}`,\n  label: `Item ${i + 1}`,\n}))"
            },
            {
                "name": "Link",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxVariant: 'link',\n  },\n}"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxLoading: true,\n  },\n}"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxLoading: true,\n    nxPlaceholder: 'Loading...',\n  },\n}"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        loading: true\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Table in loading state. Shows loading overlay with spinner.'\n            }\n        }\n    }\n}"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Processing',\n        nxLoading: true,\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [nxLoading]=\"nxLoading\"\n                [visible]=\"visible\">\n\n                <p>Please wait while we process your request...</p>\n                <p>This may take a few moments.</p>\n            </nx-modal>\n        `,\n    }),\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  title: 'Example/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\n  args: { onClick: fn() },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeaderComponent>",
                "defaultValue": "{\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n  args: {\n    onLogin: fn(),\n    onLogout: fn(),\n    onCreateAccount: fn(),\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PageComponent>",
                "defaultValue": "{\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\n  title: 'Playground/Interactive Examples',\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'Interactive playground examples demonstrating component integration and real-world usage patterns.',\n      },\n    },\n  },\n  }"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AlertComponent>",
                "defaultValue": "{\n  title: 'Components/Alert',\n  component: AlertComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    type: {\n      control: 'select',\n      options: ['info', 'success', 'warning', 'error'] as NxAlertType[],\n      description: 'Alert type determines color scheme and icon',\n    },\n    closable: {\n      control: 'boolean',\n      description: 'Whether alert can be closed',\n    },\n    showIcon: {\n      control: 'boolean',\n      description: 'Whether to show the alert icon',\n    },\n    banner: {\n      control: 'boolean',\n      description: 'Whether alert should be displayed as banner',\n    },\n    message: {\n      control: 'text',\n      description: 'Alert message text',\n    },\n    description: {\n      control: 'text',\n      description: 'Alert description text',\n    },\n    icon: {\n      control: 'text',\n      description: 'Custom icon name (overrides default icon)',\n    },\n    nxOnClose: {\n      action: 'closed',\n      description: 'Event emitted when alert is closed',\n    },\n  },\n  args: {\n    type: 'info',\n    closable: false,\n    showIcon: true,\n    banner: false,\n    message: 'Information message',\n    description: 'Additional description text to provide more context.',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  title: 'Components/Button',\n  component: ButtonComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'A versatile button component with multiple variants, sizes, and states.',\n      },\n    },\n  },\n  argTypes: {\n    nxVariant: {\n      control: 'select',\n      options: ['primary', 'secondary', 'danger', 'outline', 'ghost', 'dashed', 'link'],\n      description: 'Button style variant',\n    },\n    nxSize: {\n      control: 'select',\n      options: ['small', 'default', 'large'],\n      description: 'Button size',\n    },\n    nxShape: {\n      control: 'select',\n      options: ['default', 'circle', 'round'],\n      description: 'Button shape',\n    },\n    nxLoading: {\n      control: 'boolean',\n      description: 'Show loading state',\n    },\n    nxBlock: {\n      control: 'boolean',\n      description: 'Make button full width',\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Disable button',\n    },\n  },\n  }"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputDirective>",
                "defaultValue": "{\n  title: 'Components/Input',\n  component: InputDirective,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'A flexible input directive with various states and configurations.',\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormComponent>",
                "defaultValue": "{\n  title: 'Components/Form',\n  component: FormComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'Form components provide a flexible and accessible way to create forms with validation, different layout modes, and responsive design.'\n      }\n    }\n  },\n  argTypes: {\n    layout: {\n      control: 'select',\n      options: ['vertical', 'horizontal', 'inline'],\n      description: 'Form layout mode'\n    },\n    colon: {\n      control: 'boolean',\n      description: 'Whether to show colon after label'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Whether to disable all form controls'\n    },\n    labelWidth: {\n      control: 'text',\n      description: 'Label width for horizontal layout (px or %)'\n    },\n    className: {\n      control: 'text',\n      description: 'Additional CSS class'\n    }\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectComponent>",
                "defaultValue": "{\n  title: 'Components/Select',\n  component: SelectComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'A versatile select component with single/multiple modes, search functionality, and comprehensive keyboard navigation.',\n      },\n    },\n  },\n  argTypes: {\n    nxOptions: {\n      control: 'object',\n      description: 'Array of select options',\n    },\n    nxMode: {\n      control: 'select',\n      options: ['default', 'multiple', 'tags'],\n      description: 'Select mode (single, multiple, or tags)',\n    },\n    nxSize: {\n      control: 'select',\n      options: ['small', 'default', 'large'],\n      description: 'Select size',\n    },\n    nxPlaceholder: {\n      control: 'text',\n      description: 'Placeholder text',\n    },\n    nxDisabled: {\n      control: 'boolean',\n      description: 'Disable the select',\n    },\n    nxLoading: {\n      control: 'boolean',\n      description: 'Show loading state',\n    },\n    nxAllowClear: {\n      control: 'boolean',\n      description: 'Show clear button',\n    },\n    nxShowSearch: {\n      control: 'boolean',\n      description: 'Enable search functionality',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\n    title: 'Components/Table',\n    component: TableComponent,\n    decorators: [\n        moduleMetadata({\n            imports: [\n                CommonModule,\n                FormsModule,\n                ReactiveFormsModule,\n                TableComponent,\n                ButtonComponent,\n                NxIconDirective\n            ]\n        })\n    ],\n    parameters: {\n        layout: 'fullscreen',\n        docs: {\n            description: {\n                component: `\nA comprehensive table component with sorting, pagination, row selection, and custom template support.\n\n### Features\n- **Sorting**: Single and multi-column sorting with visual indicators\n- **Pagination**: Built-in pagination with page size options and quick jumper\n- **Row Selection**: Single and multiple selection modes with checkbox support\n- **Custom Templates**: Support for custom cell and header templates\n- **Responsive**: Mobile-friendly with horizontal scrolling\n- **Accessibility**: Full WCAG 2.1 AA compliance\n- **Loading States**: Built-in loading overlay and skeleton states\n- **Empty States**: Customizable empty state messages and icons\n\n### Usage\n\\`\\`\\`typescript\nimport { TableComponent } from 'ngx-unnamed/table';\nimport { TableColumn, TableRow } from 'ngx-unnamed/table';\n\n@Component({\n  imports: [TableComponent]\n})\nexport class MyComponent {\n  data: TableRow[] = [\n    { id: 1, name: 'John', age: 30 },\n    { id: 2, name: 'Jane', age: 25 }\n  ];\n\n  columns: TableColumn[] = [\n    { key: 'id', title: 'ID', sortable: true },\n    { key: 'name', title: 'Name', sortable: true },\n    { key: 'age', title: 'Age', sortable: true }\n  ];\n}\n\\`\\`\\`\n\n\\`\\`\\`html\n<nx-table\n  [data]=\"data\"\n  [columns]=\"columns\"\n  [rowSelection]=\"rowSelection\"\n  [pagination]=\"pagination\"\n  (sortChange)=\"onSortChange($event)\"\n  (selectionChange)=\"onSelectionChange($event)\">\n</nx-table>\n\\`\\`\\`\n                `\n            }\n        }\n    },\n    argTypes: {\n        data: {\n            description: 'Array of row data objects',\n            control: 'object'\n        },\n        columns: {\n            description: 'Array of column definitions',\n            control: 'object'\n        },\n        size: {\n            description: 'Table size variant',\n            control: 'select',\n            options: ['small', 'default', 'large']\n        },\n        showHeader: {\n            description: 'Whether to show table header',\n            control: 'boolean'\n        },\n        bordered: {\n            description: 'Whether to show borders',\n            control: 'boolean'\n        },\n        hoverable: {\n            description: 'Whether rows are hoverable',\n            control: 'boolean'\n        },\n        striped: {\n            description: 'Whether to show striped rows',\n            control: 'boolean'\n        },\n        loading: {\n            description: 'Whether table is in loading state',\n            control: 'boolean'\n        },\n        emptyText: {\n            description: 'Text to display when no data',\n            control: 'text'\n        }\n    },\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        size: 'default',\n        showHeader: true,\n        bordered: false,\n        hoverable: true,\n        striped: false,\n        loading: false,\n        emptyText: 'No data available'\n    }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ModalComponent>",
                "defaultValue": "{\n    title: 'Components/Modal',\n    component: ModalComponent,\n    tags: ['autodocs'],\n    decorators: [\n        moduleMetadata({\n            imports: [\n                CommonModule,\n                FormsModule,\n                ModalComponent,\n                ButtonComponent,\n            ],\n        }),\n    ],\n    argTypes: {\n        nxTitle: {\n            control: 'text',\n            description: 'Modal title text',\n        },\n        nxSize: {\n            control: 'select',\n            options: ['small', 'default', 'large', 'fullscreen'],\n            description: 'Modal size',\n        },\n        nxMask: {\n            control: 'boolean',\n            description: 'Whether to show backdrop mask',\n        },\n        nxMaskClosable: {\n            control: 'boolean',\n            description: 'Whether clicking mask closes modal',\n        },\n        nxKeyboard: {\n            control: 'boolean',\n            description: 'Whether ESC key closes modal',\n        },\n        nxOkText: {\n            control: 'text',\n            description: 'OK button text',\n        },\n        nxCancelText: {\n            control: 'text',\n            description: 'Cancel button text',\n        },\n        nxOkDanger: {\n            control: 'boolean',\n            description: 'Whether OK button has danger styling',\n        },\n        nxLoading: {\n            control: 'boolean',\n            description: 'Whether OK button shows loading state',\n        },\n    },\n    parameters: {\n        layout: 'centered',\n        docs: {\n            description: {\n                component: 'Modal dialog component with customizable content, size, and actions.',\n            },\n        },\n    },\n}"
            },
            {
                "name": "Multiple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxMode: 'multiple',\n    nxPlaceholder: 'Select multiple options',\n  },\n}"
            },
            {
                "name": "NoMask",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Frameless Modal',\n        nxMask: false,\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <div style=\"background: #f5f5f5; padding: 20px; border-radius: 8px;\">\n                <p>This is the background content.</p>\n                <p>The modal below has no backdrop mask.</p>\n\n                <nx-modal\n                    [nxTitle]=\"nxTitle\"\n                    [nxMask]=\"nxMask\"\n                    [visible]=\"visible\">\n\n                    <p>This modal floats above the content without a mask.</p>\n                </nx-modal>\n            </div>\n        `,\n    }),\n}"
            },
            {
                "name": "Number",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input type=\"number\" placeholder=\"Enter number\" />`,\n  }),\n}"
            },
            {
                "name": "Outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxVariant: 'outline',\n  },\n}"
            },
            {
                "name": "Paginated",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        bordered: true,\n        pagination: {\n            current: 1,\n            pageSize: 3,\n            total: sampleData.length,\n            pageSizeOptions: [3, 5, 10],\n            showQuickJumper: true,\n            showSizeChanger: true\n        } as TablePagination\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Table with pagination controls. Navigate through pages using buttons, page size selector, or quick jumper.'\n            }\n        }\n    }\n}"
            },
            {
                "name": "Password",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input type=\"password\" placeholder=\"Enter password\" />`,\n  }),\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n       color: /(background|color)$/i,\n       date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Readonly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input readonly value=\"Readonly value\" />`,\n  }),\n}"
            },
            {
                "name": "RequiredAndHelp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"vertical\" colon=\"true\" style=\"width: 400px;\">\n        <nx-form-item required=\"true\">\n          <nx-form-label label=\"Full Name\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Enter your full name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n          <div class=\"nx-form-item-extra\">Please enter your legal name as it appears on official documents</div>\n        </nx-form-item>\n\n        <nx-form-item required=\"true\">\n          <nx-form-label label=\"Email Address\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"email\" placeholder=\"you@example.com\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n          <div class=\"nx-form-item-extra\">We'll use this to contact you about your account</div>\n        </nx-form-item>\n\n        <nx-form-item required=\"true\">\n          <nx-form-label label=\"Password\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"password\" placeholder=\"Create a strong password\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n          <div class=\"nx-form-item-extra\">Must be at least 8 characters with uppercase, lowercase, and numbers</div>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Company (Optional)\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Your company name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
            },
            {
                "name": "Responsive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"horizontal\" style=\"width: 100%; max-width: 600px;\">\n        <nx-form-item labelCol=\"{ xs: 24, sm: 8 }\" controlCol=\"{ xs: 24, sm: 16 }\">\n          <nx-form-label label=\"First Name\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"First name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item labelCol=\"{ xs: 24, sm: 8 }\" controlCol=\"{ xs: 24, sm: 16 }\">\n          <nx-form-label label=\"Last Name\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Last name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item labelCol=\"{ xs: 24, sm: 8 }\" controlCol=\"{ xs: 24, sm: 16 }\">\n          <nx-form-label label=\"Email\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"email\" placeholder=\"Email address\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item labelCol=\"{ xs: 24, sm: 8 }\" controlCol=\"{ xs: 24, sm: 16 }\">\n          <nx-form-label label=\"Bio\"></nx-form-label>\n          <nx-form-control>\n            <textarea placeholder=\"Tell us about yourself\" rows=\"4\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px; resize: vertical;\"></textarea>\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  }),\n  parameters: {\n    viewport: {\n      defaultViewport: 'responsive'\n    }\n  }\n}"
            },
            {
                "name": "Responsive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            wideData: [\n                ...sampleData,\n                { id: 9, name: 'George Anderson', age: 52, email: 'george.anderson@company.com', department: 'Engineering', position: 'Senior Software Engineer', location: 'San Francisco', hireDate: '2015-03-15' },\n                { id: 10, name: 'Helen Taylor', age: 38, email: 'helen.taylor@company.com', department: 'Marketing', position: 'Marketing Manager', location: 'New York', hireDate: '2018-07-22' }\n            ],\n            wideColumns: [\n                { key: 'id', title: 'ID', width: '80px', sortable: true },\n                { key: 'name', title: 'Name', sortable: true, fixed: 'left' },\n                { key: 'department', title: 'Department', sortable: true },\n                { key: 'position', title: 'Position', sortable: false },\n                { key: 'location', title: 'Location', sortable: true },\n                { key: 'hireDate', title: 'Hire Date', sortable: true },\n                { key: 'email', title: 'Email', sortable: false }\n            ]\n        },\n        template: `\n            <div style=\"max-width: 800px;\">\n                <h3>Responsive Table (viewport width: 800px)</h3>\n                <nx-table\n                    [data]=\"wideData\"\n                    [columns]=\"wideColumns\"\n                    [bordered]=\"true\"\n                    [hoverable]=\"true\"\n                    [scroll]=\"{ x: '1000px' }\">\n                </nx-table>\n            </div>\n        `\n    }),\n    parameters: {\n        viewport: {\n            viewports: {\n                tablet: {\n                    name: 'Tablet',\n                    styles: {\n                        width: '800px',\n                        height: '600px'\n                    }\n                }\n            },\n            defaultViewport: 'tablet'\n        },\n        docs: {\n            description: {\n                story: 'Responsive table with horizontal scrolling. Fixed left column stays visible while scrolling horizontally.'\n            }\n        }\n    }\n}"
            },
            {
                "name": "Round",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxShape: 'round',\n  },\n}"
            },
            {
                "name": "RowSelection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        bordered: true,\n        rowSelection: {\n            selectedRowKeys: [],\n            mode: 'multiple',\n            rowKey: 'id',\n            selectOnRowClick: false\n        } as TableSelection\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Table with row selection. Use checkboxes to select rows or enable selectOnRowClick to select by clicking rows.'\n            }\n        }\n    }\n}"
            },
            {
                "name": "sampleData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TableRow[]",
                "defaultValue": "[\n    { id: 1, name: 'John Doe', age: 32, email: 'john.doe@example.com', status: 'Active', salary: 75000 },\n    { id: 2, name: 'Jane Smith', age: 28, email: 'jane.smith@example.com', status: 'Active', salary: 82000 },\n    { id: 3, name: 'Bob Johnson', age: 45, email: 'bob.johnson@example.com', status: 'Inactive', salary: 65000 },\n    { id: 4, name: 'Alice Brown', age: 34, email: 'alice.brown@example.com', status: 'Active', salary: 91000 },\n    { id: 5, name: 'Charlie Wilson', age: 29, email: 'charlie.wilson@example.com', status: 'Active', salary: 78000 },\n    { id: 6, name: 'Diana Miller', age: 41, email: 'diana.miller@example.com', status: 'Inactive', salary: 88000 },\n    { id: 7, name: 'Edward Davis', age: 37, email: 'edward.davis@example.com', status: 'Active', salary: 95000 },\n    { id: 8, name: 'Fiona Garcia', age: 26, email: 'fiona.garcia@example.com', status: 'Active', salary: 68000 }\n]"
            },
            {
                "name": "sampleOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SelectOption[]",
                "defaultValue": "[\n  { value: 'apple', label: 'Apple' },\n  { value: 'banana', label: 'Banana' },\n  { value: 'orange', label: 'Orange' },\n  { value: 'grape', label: 'Grape' },\n  { value: 'strawberry', label: 'Strawberry' },\n]"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxVariant: 'secondary',\n  },\n}"
            },
            {
                "name": "ShowCode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"padding: 20px; max-width: 600px;\">\n        <h3>Show Code Example</h3>\n        <p>Click the \"Show code\" button in Storybook to see the source code for these examples.</p>\n\n        <div style=\"margin: 20px 0;\">\n          <h4>Basic Usage</h4>\n          <button nx-button>Primary Button</button>\n          <button nx-button nxVariant=\"secondary\">Secondary Button</button>\n        </div>\n\n        <div style=\"margin: 20px 0;\">\n          <h4>With Icons</h4>\n          <button nx-button>\n            <span nxIcon type=\"user\" theme=\"outline\"></span>\n            User Profile\n          </button>\n          <button nx-button nxVariant=\"danger\">\n            <span nxIcon type=\"delete\" theme=\"outline\"></span>\n            Delete\n          </button>\n        </div>\n\n        <div style=\"margin: 20px 0;\">\n          <h4>Form Elements</h4>\n          <input nx-input placeholder=\"Enter text here\">\n          <button nx-button nxVariant=\"outline\" style=\"margin-left: 8px;\">Submit</button>\n        </div>\n      </div>\n    `\n  }),\n}"
            },
            {
                "name": "SingleSelection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        bordered: true,\n        rowSelection: {\n            selectedRowKeys: [],\n            mode: 'single',\n            rowKey: 'id',\n            selectOnRowClick: true\n        } as TableSelection\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Table with single row selection. Click any row to select it.'\n            }\n        }\n    }\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxSize: 'small',\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input nxSize=\"small\" placeholder=\"Small input\" />`,\n  }),\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxSize: 'small',\n    nxPlaceholder: 'Small select',\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        size: 'small'\n    }\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Small Modal',\n        nxSize: 'small',\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [nxSize]=\"nxSize\"\n                [visible]=\"visible\">\n\n                <p>This is a small modal with compact content.</p>\n            </nx-modal>\n        `,\n    }),\n}"
            },
            {
                "name": "Sortable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: advancedColumns,\n        bordered: true\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Table with sortable columns. Click column headers to sort. Hold Shift and click for multi-column sorting.'\n            }\n        }\n    }\n}"
            },
            {
                "name": "Striped",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        striped: true\n    }\n}"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    type: 'success',\n    message: 'Success! Your changes have been saved.',\n    description: 'The operation completed successfully and your data is now available.',\n  },\n}"
            },
            {
                "name": "Tags",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxMode: 'tags',\n    nxPlaceholder: 'Select tags',\n  },\n}"
            },
            {
                "name": "ValidationStates",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"vertical\" style=\"width: 400px;\">\n        <nx-form-item validateStatus=\"success\" hasFeedback=\"true\">\n          <nx-form-label label=\"Username\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" value=\"john_doe\" style=\"width: 100%; padding: 8px; border: 1px solid #52c41a; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item validateStatus=\"error\" errorTip=\"Please enter a valid email address\" hasFeedback=\"true\">\n          <nx-form-label label=\"Email\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"email\" value=\"invalid-email\" style=\"width: 100%; padding: 8px; border: 1px solid #ff4d4f; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item validateStatus=\"warning\" hasFeedback=\"true\">\n          <nx-form-label label=\"Password\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"password\" value=\"123\" style=\"width: 100%; padding: 8px; border: 1px solid #faad14; border-radius: 6px;\">\n          </nx-form-control>\n          <div class=\"nx-form-item-extra\">Password should be at least 8 characters</div>\n        </nx-form-item>\n\n        <nx-form-item validateStatus=\"validating\" hasFeedback=\"true\">\n          <nx-form-label label=\"Phone\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"tel\" placeholder=\"Validating...\" style=\"width: 100%; padding: 8px; border: 1px solid #1890ff; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
            },
            {
                "name": "Vertical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"vertical\" style=\"width: 400px;\">\n        <nx-form-item>\n          <nx-form-label label=\"Name\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Enter your name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Email\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"email\" placeholder=\"Enter your email\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Message\"></nx-form-label>\n          <nx-form-control>\n            <textarea placeholder=\"Enter your message\" rows=\"4\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px; resize: vertical;\"></textarea>\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-control>\n            <button type=\"submit\" style=\"padding: 8px 16px; background: #1890ff; color: white; border: none; border-radius: 6px; cursor: pointer;\">Submit</button>\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    type: 'warning',\n    message: 'Warning: Please review your input',\n    description: 'There might be an issue with the information you provided. Please check and try again.',\n  },\n}"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input nxStatus=\"warning\" value=\"Warning state\" />`,\n  }),\n}"
            },
            {
                "name": "WithActionTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <nx-alert type=\"warning\" message=\"Alert with actions\" description=\"This alert has custom action buttons.\">\n        <ng-template #actionTemplate>\n          <button nx-button nx-variant=\"primary\" style=\"margin-right: 8px;\">Confirm</button>\n          <button nx-button nx-variant=\"ghost\">Cancel</button>\n        </ng-template>\n      </nx-alert>\n    `,\n  }),\n}"
            },
            {
                "name": "WithContentProjection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <nx-alert type=\"info\">\n        <strong>This is projected content</strong>\n        <br />\n        You can use HTML formatting in projected content.\n      </nx-alert>\n    `,\n  }),\n}"
            },
            {
                "name": "WithHelperText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 4px;\">\n        <input nx-input placeholder=\"Enter text here\" />\n        <small style=\"color: #666;\">Helper text goes here</small>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <button nx-button nxVariant=\"primary\">\n        <span nxIcon type=\"user\" theme=\"outline\"></span>\n        Click Me\n      </button>\n    `,\n  }),\n}"
            },
            {
                "name": "WithLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 8px;\">\n        <label for=\"input\">Username</label>\n        <input nx-input id=\"input\" placeholder=\"Enter username\" />\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "WithMessageInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    message: 'Alert with message input',\n    description: 'This message is set via the message input property.',\n  },\n}"
            },
            {
                "name": "WithoutIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    showIcon: false,\n    message: 'Alert without icon',\n    description: 'This alert has no icon for a more compact appearance.',\n  },\n}"
            },
            {
                "name": "WithSearch",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nxOptions: largeOptions,\n    nxShowSearch: true,\n    nxPlaceholder: 'Search and select',\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/ngx-unnamed/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderComponent>",
                "file": "projects/ngx-unnamed/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PageComponent>",
                "file": "projects/ngx-unnamed/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AlertComponent>",
                "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputDirective>",
                "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormComponent>",
                "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectComponent>",
                "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ModalComponent>",
                "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/ngx-unnamed/src/lib/components/table/table.stories.ts": [
                {
                    "name": "advancedColumns",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableColumn[]",
                    "defaultValue": "[\n    { key: 'id', title: 'ID', width: '80px', sortable: true, fixed: 'left' },\n    { key: 'name', title: 'Name', sortable: true, fixed: 'left' },\n    { key: 'age', title: 'Age', width: '100px', sortable: true, align: 'center' },\n    { key: 'email', title: 'Email', sortable: false },\n    { key: 'status', title: 'Status', width: '120px', sortable: true },\n    { key: 'salary', title: 'Salary', width: '120px', sortable: true, align: 'right' }\n]"
                },
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns\n    }\n}"
                },
                {
                    "name": "basicColumns",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableColumn[]",
                    "defaultValue": "[\n    { key: 'id', title: 'ID', width: '80px', sortable: true },\n    { key: 'name', title: 'Name', sortable: true },\n    { key: 'age', title: 'Age', width: '100px', sortable: true, align: 'center' },\n    { key: 'email', title: 'Email', sortable: false }\n]"
                },
                {
                    "name": "Bordered",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        bordered: true\n    }\n}"
                },
                {
                    "name": "Complex",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: advancedColumns,\n        bordered: true,\n        hoverable: true,\n        striped: true,\n        rowSelection: {\n            selectedRowKeys: [],\n            mode: 'multiple',\n            rowKey: 'id',\n            selectOnRowClick: false,\n            disabledRowKeys: [3, 6] // Disable some rows\n        } as TableSelection,\n        pagination: {\n            current: 1,\n            pageSize: 5,\n            total: sampleData.length,\n            pageSizeOptions: [5, 10, 20],\n            showQuickJumper: true,\n            showSizeChanger: true\n        } as TablePagination\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Complex table demonstrating all features: sorting, pagination, row selection, disabled rows, and styling options.'\n            }\n        }\n    }\n}"
                },
                {
                    "name": "CustomTemplates",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-table\n                [data]=\"data\"\n                [columns]=\"columns\"\n                [bordered]=\"true\">\n\n                <!-- Custom status cell template -->\n                <ng-template #statusCell let-value let-record=\"record\">\n                    <span\n                        class=\"status-badge\"\n                        [class.status-active]=\"value === 'Active'\"\n                        [class.status-inactive]=\"value === 'Inactive'\">\n                        {{ value }}\n                    </span>\n                </ng-template>\n\n                <!-- Custom salary cell template -->\n                <ng-template #salaryCell let-value>\n                    <strong>\\${{ value.toLocaleString() }}</strong>\n                </ng-template>\n\n                <!-- Custom header template -->\n                <ng-template #nameHeader let-column>\n                    <strong>{{ column.title }}</strong>\n                    <span style=\"font-size: 12px; color: #666;\"> (Full Name)</span>\n                </ng-template>\n            </nx-table>\n\n            <style>\n                .status-badge {\n                    padding: 4px 8px;\n                    border-radius: 12px;\n                    font-size: 12px;\n                    font-weight: 500;\n                }\n                .status-active {\n                    background: #f0f9ff;\n                    color: #0369a1;\n                }\n                .status-inactive {\n                    background: #f5f5f5;\n                    color: #666;\n                }\n            </style>\n        `\n    }),\n    args: {\n        data: sampleData,\n        columns: [\n            { key: 'id', title: 'ID', width: '80px', sortable: true },\n            { key: 'name', title: 'Name', sortable: true },\n            { key: 'age', title: 'Age', width: '100px', sortable: true, align: 'center' },\n            { key: 'email', title: 'Email', sortable: false },\n            {\n                key: 'status',\n                title: 'Status',\n                width: '120px',\n                sortable: true\n            },\n            {\n                key: 'salary',\n                title: 'Salary',\n                width: '120px',\n                sortable: true,\n                align: 'right'\n            }\n        ]\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Table with custom cell and header templates. Status column shows colored badges, salary column shows formatted currency, and name header has custom styling.'\n            }\n        }\n    }\n}"
                },
                {
                    "name": "Empty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        data: [],\n        columns: basicColumns,\n        emptyText: 'No employees found'\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Table with empty state. Shows custom message when no data is available.'\n            }\n        }\n    }\n}"
                },
                {
                    "name": "InteractiveDemo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            onSortChange: action('sortChange'),\n            onSelectionChange: action('selectionChange'),\n            onPageChange: action('pageChange'),\n            onRowClick: action('rowClick')\n        },\n        template: `\n            <div style=\"padding: 20px;\">\n                <div style=\"margin-bottom: 20px;\">\n                    <h3>Interactive Table Demo</h3>\n                    <p>Click column headers to sort, select rows, and navigate pages. Check the Actions panel for event details.</p>\n                </div>\n\n                <nx-table\n                    [data]=\"data\"\n                    [columns]=\"columns\"\n                    [bordered]=\"true\"\n                    [hoverable]=\"true\"\n                    [rowSelection]=\"rowSelection\"\n                    [pagination]=\"pagination\"\n                    (sortChange)=\"onSortChange($event)\"\n                    (selectionChange)=\"onSelectionChange($event)\"\n                    (pageChange)=\"onPageChange($event)\"\n                    (rowClick)=\"onRowClick($event)\">\n                </nx-table>\n            </div>\n        `\n    }),\n    args: {\n        data: sampleData,\n        columns: advancedColumns,\n        rowSelection: {\n            selectedRowKeys: [],\n            mode: 'multiple',\n            rowKey: 'id',\n            selectOnRowClick: false\n        } as TableSelection,\n        pagination: {\n            current: 1,\n            pageSize: 5,\n            total: sampleData.length,\n            pageSizeOptions: [5, 10],\n            showQuickJumper: true,\n            showSizeChanger: true\n        } as TablePagination\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Interactive demo with event handling. All table events are logged in the Actions panel.'\n            }\n        }\n    }\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        size: 'large'\n    }\n}"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        loading: true\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Table in loading state. Shows loading overlay with spinner.'\n            }\n        }\n    }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\n    title: 'Components/Table',\n    component: TableComponent,\n    decorators: [\n        moduleMetadata({\n            imports: [\n                CommonModule,\n                FormsModule,\n                ReactiveFormsModule,\n                TableComponent,\n                ButtonComponent,\n                NxIconDirective\n            ]\n        })\n    ],\n    parameters: {\n        layout: 'fullscreen',\n        docs: {\n            description: {\n                component: `\nA comprehensive table component with sorting, pagination, row selection, and custom template support.\n\n### Features\n- **Sorting**: Single and multi-column sorting with visual indicators\n- **Pagination**: Built-in pagination with page size options and quick jumper\n- **Row Selection**: Single and multiple selection modes with checkbox support\n- **Custom Templates**: Support for custom cell and header templates\n- **Responsive**: Mobile-friendly with horizontal scrolling\n- **Accessibility**: Full WCAG 2.1 AA compliance\n- **Loading States**: Built-in loading overlay and skeleton states\n- **Empty States**: Customizable empty state messages and icons\n\n### Usage\n\\`\\`\\`typescript\nimport { TableComponent } from 'ngx-unnamed/table';\nimport { TableColumn, TableRow } from 'ngx-unnamed/table';\n\n@Component({\n  imports: [TableComponent]\n})\nexport class MyComponent {\n  data: TableRow[] = [\n    { id: 1, name: 'John', age: 30 },\n    { id: 2, name: 'Jane', age: 25 }\n  ];\n\n  columns: TableColumn[] = [\n    { key: 'id', title: 'ID', sortable: true },\n    { key: 'name', title: 'Name', sortable: true },\n    { key: 'age', title: 'Age', sortable: true }\n  ];\n}\n\\`\\`\\`\n\n\\`\\`\\`html\n<nx-table\n  [data]=\"data\"\n  [columns]=\"columns\"\n  [rowSelection]=\"rowSelection\"\n  [pagination]=\"pagination\"\n  (sortChange)=\"onSortChange($event)\"\n  (selectionChange)=\"onSelectionChange($event)\">\n</nx-table>\n\\`\\`\\`\n                `\n            }\n        }\n    },\n    argTypes: {\n        data: {\n            description: 'Array of row data objects',\n            control: 'object'\n        },\n        columns: {\n            description: 'Array of column definitions',\n            control: 'object'\n        },\n        size: {\n            description: 'Table size variant',\n            control: 'select',\n            options: ['small', 'default', 'large']\n        },\n        showHeader: {\n            description: 'Whether to show table header',\n            control: 'boolean'\n        },\n        bordered: {\n            description: 'Whether to show borders',\n            control: 'boolean'\n        },\n        hoverable: {\n            description: 'Whether rows are hoverable',\n            control: 'boolean'\n        },\n        striped: {\n            description: 'Whether to show striped rows',\n            control: 'boolean'\n        },\n        loading: {\n            description: 'Whether table is in loading state',\n            control: 'boolean'\n        },\n        emptyText: {\n            description: 'Text to display when no data',\n            control: 'text'\n        }\n    },\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        size: 'default',\n        showHeader: true,\n        bordered: false,\n        hoverable: true,\n        striped: false,\n        loading: false,\n        emptyText: 'No data available'\n    }\n}"
                },
                {
                    "name": "Paginated",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        bordered: true,\n        pagination: {\n            current: 1,\n            pageSize: 3,\n            total: sampleData.length,\n            pageSizeOptions: [3, 5, 10],\n            showQuickJumper: true,\n            showSizeChanger: true\n        } as TablePagination\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Table with pagination controls. Navigate through pages using buttons, page size selector, or quick jumper.'\n            }\n        }\n    }\n}"
                },
                {
                    "name": "Responsive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    render: (args) => ({\n        props: {\n            ...args,\n            wideData: [\n                ...sampleData,\n                { id: 9, name: 'George Anderson', age: 52, email: 'george.anderson@company.com', department: 'Engineering', position: 'Senior Software Engineer', location: 'San Francisco', hireDate: '2015-03-15' },\n                { id: 10, name: 'Helen Taylor', age: 38, email: 'helen.taylor@company.com', department: 'Marketing', position: 'Marketing Manager', location: 'New York', hireDate: '2018-07-22' }\n            ],\n            wideColumns: [\n                { key: 'id', title: 'ID', width: '80px', sortable: true },\n                { key: 'name', title: 'Name', sortable: true, fixed: 'left' },\n                { key: 'department', title: 'Department', sortable: true },\n                { key: 'position', title: 'Position', sortable: false },\n                { key: 'location', title: 'Location', sortable: true },\n                { key: 'hireDate', title: 'Hire Date', sortable: true },\n                { key: 'email', title: 'Email', sortable: false }\n            ]\n        },\n        template: `\n            <div style=\"max-width: 800px;\">\n                <h3>Responsive Table (viewport width: 800px)</h3>\n                <nx-table\n                    [data]=\"wideData\"\n                    [columns]=\"wideColumns\"\n                    [bordered]=\"true\"\n                    [hoverable]=\"true\"\n                    [scroll]=\"{ x: '1000px' }\">\n                </nx-table>\n            </div>\n        `\n    }),\n    parameters: {\n        viewport: {\n            viewports: {\n                tablet: {\n                    name: 'Tablet',\n                    styles: {\n                        width: '800px',\n                        height: '600px'\n                    }\n                }\n            },\n            defaultViewport: 'tablet'\n        },\n        docs: {\n            description: {\n                story: 'Responsive table with horizontal scrolling. Fixed left column stays visible while scrolling horizontally.'\n            }\n        }\n    }\n}"
                },
                {
                    "name": "RowSelection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        bordered: true,\n        rowSelection: {\n            selectedRowKeys: [],\n            mode: 'multiple',\n            rowKey: 'id',\n            selectOnRowClick: false\n        } as TableSelection\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Table with row selection. Use checkboxes to select rows or enable selectOnRowClick to select by clicking rows.'\n            }\n        }\n    }\n}"
                },
                {
                    "name": "sampleData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableRow[]",
                    "defaultValue": "[\n    { id: 1, name: 'John Doe', age: 32, email: 'john.doe@example.com', status: 'Active', salary: 75000 },\n    { id: 2, name: 'Jane Smith', age: 28, email: 'jane.smith@example.com', status: 'Active', salary: 82000 },\n    { id: 3, name: 'Bob Johnson', age: 45, email: 'bob.johnson@example.com', status: 'Inactive', salary: 65000 },\n    { id: 4, name: 'Alice Brown', age: 34, email: 'alice.brown@example.com', status: 'Active', salary: 91000 },\n    { id: 5, name: 'Charlie Wilson', age: 29, email: 'charlie.wilson@example.com', status: 'Active', salary: 78000 },\n    { id: 6, name: 'Diana Miller', age: 41, email: 'diana.miller@example.com', status: 'Inactive', salary: 88000 },\n    { id: 7, name: 'Edward Davis', age: 37, email: 'edward.davis@example.com', status: 'Active', salary: 95000 },\n    { id: 8, name: 'Fiona Garcia', age: 26, email: 'fiona.garcia@example.com', status: 'Active', salary: 68000 }\n]"
                },
                {
                    "name": "SingleSelection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        bordered: true,\n        rowSelection: {\n            selectedRowKeys: [],\n            mode: 'single',\n            rowKey: 'id',\n            selectOnRowClick: true\n        } as TableSelection\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Table with single row selection. Click any row to select it.'\n            }\n        }\n    }\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        size: 'small'\n    }\n}"
                },
                {
                    "name": "Sortable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: advancedColumns,\n        bordered: true\n    },\n    parameters: {\n        docs: {\n            description: {\n                story: 'Table with sortable columns. Click column headers to sort. Hold Shift and click for multi-column sorting.'\n            }\n        }\n    }\n}"
                },
                {
                    "name": "Striped",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        data: sampleData,\n        columns: basicColumns,\n        striped: true\n    }\n}"
                }
            ],
            "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts": [
                {
                    "name": "AllSizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 8px; flex-wrap: wrap; align-items: center;\">\n        <button nx-button nxSize=\"small\">Small</button>\n        <button nx-button nxSize=\"default\">Default</button>\n        <button nx-button nxSize=\"large\">Large</button>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "AllVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 8px; flex-wrap: wrap; align-items: center;\">\n        <button nx-button nxVariant=\"primary\">Primary</button>\n        <button nx-button nxVariant=\"secondary\">Secondary</button>\n        <button nx-button nxVariant=\"danger\">Danger</button>\n        <button nx-button nxVariant=\"outline\">Outline</button>\n        <button nx-button nxVariant=\"ghost\">Ghost</button>\n        <button nx-button nxVariant=\"dashed\">Dashed</button>\n        <button nx-button nxVariant=\"link\">Link</button>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Block",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxBlock: true,\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Block level button takes full width of its container.',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "Circle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `<button nx-button nxShape=\"circle\">üîç</button>`,\n  }),\n}"
                },
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxVariant: 'danger',\n  },\n}"
                },
                {
                    "name": "Dashed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxVariant: 'dashed',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxVariant: 'primary',\n  },\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: true,\n  },\n}"
                },
                {
                    "name": "Ghost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxVariant: 'ghost',\n  },\n}"
                },
                {
                    "name": "InteractiveStates",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 8px; flex-wrap: wrap; align-items: center;\">\n        <button nx-button>Normal</button>\n        <button nx-button [disabled]=\"true\">Disabled</button>\n        <button nx-button [nxLoading]=\"true\">Loading</button>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxSize: 'large',\n  },\n}"
                },
                {
                    "name": "Link",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxVariant: 'link',\n  },\n}"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxLoading: true,\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  title: 'Components/Button',\n  component: ButtonComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'A versatile button component with multiple variants, sizes, and states.',\n      },\n    },\n  },\n  argTypes: {\n    nxVariant: {\n      control: 'select',\n      options: ['primary', 'secondary', 'danger', 'outline', 'ghost', 'dashed', 'link'],\n      description: 'Button style variant',\n    },\n    nxSize: {\n      control: 'select',\n      options: ['small', 'default', 'large'],\n      description: 'Button size',\n    },\n    nxShape: {\n      control: 'select',\n      options: ['default', 'circle', 'round'],\n      description: 'Button shape',\n    },\n    nxLoading: {\n      control: 'boolean',\n      description: 'Show loading state',\n    },\n    nxBlock: {\n      control: 'boolean',\n      description: 'Make button full width',\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Disable button',\n    },\n  },\n  }"
                },
                {
                    "name": "Outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxVariant: 'outline',\n  },\n}"
                },
                {
                    "name": "Round",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxShape: 'round',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxVariant: 'secondary',\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxSize: 'small',\n  },\n}"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <button nx-button nxVariant=\"primary\">\n        <span nxIcon type=\"user\" theme=\"outline\"></span>\n        Click Me\n      </button>\n    `,\n  }),\n}"
                }
            ],
            "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts": [
                {
                    "name": "AllSizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 12px;\">\n        <input nx-input nxSize=\"small\" placeholder=\"Small input\" />\n        <input nx-input nxSize=\"default\" placeholder=\"Default input\" />\n        <input nx-input nxSize=\"large\" placeholder=\"Large input\" />\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "AllStates",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 12px;\">\n        <input nx-input placeholder=\"Default state\" />\n        <input nx-input nxStatus=\"error\" value=\"Error state\" />\n        <input nx-input nxStatus=\"warning\" value=\"Warning state\" />\n        <input nx-input disabled value=\"Disabled state\" />\n        <input nx-input readonly value=\"Readonly state\" />\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input placeholder=\"Enter text here\" />`,\n  }),\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input disabled value=\"Disabled input\" />`,\n  }),\n}"
                },
                {
                    "name": "Email",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input type=\"email\" placeholder=\"Enter email\" />`,\n  }),\n}"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input nxStatus=\"error\" value=\"Invalid input\" />`,\n  }),\n}"
                },
                {
                    "name": "FormExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <form style=\"display: flex; flex-direction: column; gap: 16px; max-width: 300px;\">\n        <div style=\"display: flex; flex-direction: column; gap: 4px;\">\n          <label for=\"name\">Name</label>\n          <input nx-input id=\"name\" placeholder=\"Enter your name\" />\n        </div>\n        <div style=\"display: flex; flex-direction: column; gap: 4px;\">\n          <label for=\"email\">Email</label>\n          <input nx-input id=\"email\" type=\"email\" placeholder=\"Enter your email\" />\n        </div>\n        <div style=\"display: flex; flex-direction: column; gap: 4px;\">\n          <label for=\"password\">Password</label>\n          <input nx-input id=\"password\" type=\"password\" placeholder=\"Enter your password\" />\n        </div>\n      </form>\n    `,\n  }),\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input nxSize=\"large\" placeholder=\"Large input\" />`,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputDirective>",
                    "defaultValue": "{\n  title: 'Components/Input',\n  component: InputDirective,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'A flexible input directive with various states and configurations.',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "Number",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input type=\"number\" placeholder=\"Enter number\" />`,\n  }),\n}"
                },
                {
                    "name": "Password",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input type=\"password\" placeholder=\"Enter password\" />`,\n  }),\n}"
                },
                {
                    "name": "Readonly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input readonly value=\"Readonly value\" />`,\n  }),\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input nxSize=\"small\" placeholder=\"Small input\" />`,\n  }),\n}"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `<input nx-input nxStatus=\"warning\" value=\"Warning state\" />`,\n  }),\n}"
                },
                {
                    "name": "WithHelperText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 4px;\">\n        <input nx-input placeholder=\"Enter text here\" />\n        <small style=\"color: #666;\">Helper text goes here</small>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 8px;\">\n        <label for=\"input\">Username</label>\n        <input nx-input id=\"input\" placeholder=\"Enter username\" />\n      </div>\n    `,\n  }),\n}"
                }
            ],
            "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts": [
                {
                    "name": "AllVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; max-width: 600px;\">\n        <nx-alert type=\"info\" message=\"Info Alert\" description=\"This is an informational alert.\"></nx-alert>\n        <nx-alert type=\"success\" message=\"Success Alert\" description=\"Operation completed successfully.\"></nx-alert>\n        <nx-alert type=\"warning\" message=\"Warning Alert\" description=\"Please review the information provided.\"></nx-alert>\n        <nx-alert type=\"error\" message=\"Error Alert\" description=\"An error occurred while processing.\"></nx-alert>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Banner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    banner: true,\n    message: 'This is a banner alert',\n    description: 'Banner alerts span the full width and have no border radius.',\n  },\n}"
                },
                {
                    "name": "BannerExamples",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; max-width: 800px;\">\n        <nx-alert\n          banner=\"true\"\n          type=\"info\"\n          closable=\"true\"\n          message=\"Site-wide notification\"\n          description=\"This banner alert spans the full width and can be dismissed.\">\n        </nx-alert>\n        <nx-alert\n          banner=\"true\"\n          type=\"warning\"\n          message=\"Maintenance notice\"\n          description=\"Scheduled maintenance will occur on Sunday from 2-4 AM EST.\">\n        </nx-alert>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Closable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    closable: true,\n    message: 'This alert can be closed',\n    description: 'Click the X button in the top-right corner to dismiss this alert.',\n  },\n}"
                },
                {
                    "name": "CustomIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    icon: 'warning',\n    message: 'Alert with custom icon',\n    description: 'This alert uses a custom icon instead of the default one.',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    message: 'This is an informational alert message',\n    description: 'Here is some additional information to help the user understand the context.',\n  },\n}"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    type: 'error',\n    message: 'Error: Unable to process your request',\n    description: 'An unexpected error occurred. Please try again later or contact support if the issue persists.',\n  },\n}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; max-width: 600px;\">\n        <nx-alert\n          type=\"info\"\n          closable=\"true\"\n          message=\"Interactive Alert\"\n          description=\"Try closing this alert using the X button.\">\n        </nx-alert>\n        <nx-alert\n          type=\"success\"\n          closable=\"true\"\n          message=\"Another closable alert\"\n          description=\"This one can also be dismissed.\">\n        </nx-alert>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AlertComponent>",
                    "defaultValue": "{\n  title: 'Components/Alert',\n  component: AlertComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    type: {\n      control: 'select',\n      options: ['info', 'success', 'warning', 'error'] as NxAlertType[],\n      description: 'Alert type determines color scheme and icon',\n    },\n    closable: {\n      control: 'boolean',\n      description: 'Whether alert can be closed',\n    },\n    showIcon: {\n      control: 'boolean',\n      description: 'Whether to show the alert icon',\n    },\n    banner: {\n      control: 'boolean',\n      description: 'Whether alert should be displayed as banner',\n    },\n    message: {\n      control: 'text',\n      description: 'Alert message text',\n    },\n    description: {\n      control: 'text',\n      description: 'Alert description text',\n    },\n    icon: {\n      control: 'text',\n      description: 'Custom icon name (overrides default icon)',\n    },\n    nxOnClose: {\n      action: 'closed',\n      description: 'Event emitted when alert is closed',\n    },\n  },\n  args: {\n    type: 'info',\n    closable: false,\n    showIcon: true,\n    banner: false,\n    message: 'Information message',\n    description: 'Additional description text to provide more context.',\n  },\n}"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    type: 'success',\n    message: 'Success! Your changes have been saved.',\n    description: 'The operation completed successfully and your data is now available.',\n  },\n}"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    type: 'warning',\n    message: 'Warning: Please review your input',\n    description: 'There might be an issue with the information you provided. Please check and try again.',\n  },\n}"
                },
                {
                    "name": "WithActionTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <nx-alert type=\"warning\" message=\"Alert with actions\" description=\"This alert has custom action buttons.\">\n        <ng-template #actionTemplate>\n          <button nx-button nx-variant=\"primary\" style=\"margin-right: 8px;\">Confirm</button>\n          <button nx-button nx-variant=\"ghost\">Cancel</button>\n        </ng-template>\n      </nx-alert>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithContentProjection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <nx-alert type=\"info\">\n        <strong>This is projected content</strong>\n        <br />\n        You can use HTML formatting in projected content.\n      </nx-alert>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithMessageInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    message: 'Alert with message input',\n    description: 'This message is set via the message input property.',\n  },\n}"
                },
                {
                    "name": "WithoutIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    showIcon: false,\n    message: 'Alert without icon',\n    description: 'This alert has no icon for a more compact appearance.',\n  },\n}"
                }
            ],
            "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts": [
                {
                    "name": "Clearable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxAllowClear: true,\n    nxPlaceholder: 'Clearable select',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxPlaceholder: 'Select an option',\n  },\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxDisabled: true,\n    nxPlaceholder: 'Disabled select',\n  },\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxSize: 'large',\n    nxPlaceholder: 'Large select',\n  },\n}"
                },
                {
                    "name": "largeOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "defaultValue": "Array.from({ length: 1000 }, (_, i) => ({\n  value: `item-${i}`,\n  label: `Item ${i + 1}`,\n}))"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxLoading: true,\n    nxPlaceholder: 'Loading...',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectComponent>",
                    "defaultValue": "{\n  title: 'Components/Select',\n  component: SelectComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'A versatile select component with single/multiple modes, search functionality, and comprehensive keyboard navigation.',\n      },\n    },\n  },\n  argTypes: {\n    nxOptions: {\n      control: 'object',\n      description: 'Array of select options',\n    },\n    nxMode: {\n      control: 'select',\n      options: ['default', 'multiple', 'tags'],\n      description: 'Select mode (single, multiple, or tags)',\n    },\n    nxSize: {\n      control: 'select',\n      options: ['small', 'default', 'large'],\n      description: 'Select size',\n    },\n    nxPlaceholder: {\n      control: 'text',\n      description: 'Placeholder text',\n    },\n    nxDisabled: {\n      control: 'boolean',\n      description: 'Disable the select',\n    },\n    nxLoading: {\n      control: 'boolean',\n      description: 'Show loading state',\n    },\n    nxAllowClear: {\n      control: 'boolean',\n      description: 'Show clear button',\n    },\n    nxShowSearch: {\n      control: 'boolean',\n      description: 'Enable search functionality',\n    },\n  },\n}"
                },
                {
                    "name": "Multiple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxMode: 'multiple',\n    nxPlaceholder: 'Select multiple options',\n  },\n}"
                },
                {
                    "name": "sampleOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "defaultValue": "[\n  { value: 'apple', label: 'Apple' },\n  { value: 'banana', label: 'Banana' },\n  { value: 'orange', label: 'Orange' },\n  { value: 'grape', label: 'Grape' },\n  { value: 'strawberry', label: 'Strawberry' },\n]"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxSize: 'small',\n    nxPlaceholder: 'Small select',\n  },\n}"
                },
                {
                    "name": "Tags",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxOptions: sampleOptions,\n    nxMode: 'tags',\n    nxPlaceholder: 'Select tags',\n  },\n}"
                },
                {
                    "name": "WithSearch",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nxOptions: largeOptions,\n    nxShowSearch: true,\n    nxPlaceholder: 'Search and select',\n  },\n}"
                }
            ],
            "projects/ngx-unnamed/src/lib/components/form/form.stories.ts": [
                {
                    "name": "Compact",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"vertical\" className=\"nx-form-compact\" style=\"width: 400px;\">\n        <nx-form-item>\n          <nx-form-label label=\"Username\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Enter username\" style=\"width: 100%; padding: 4px 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Password\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"password\" placeholder=\"Enter password\" style=\"width: 100%; padding: 4px 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-control>\n            <button type=\"submit\" style=\"padding: 4px 12px; background: #1890ff; color: white; border: none; border-radius: 6px; cursor: pointer;\">Sign In</button>\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
                },
                {
                    "name": "ComplexForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <div style=\"max-width: 800px; margin: 0 auto;\">\n        <h2 style=\"margin-bottom: 24px;\">User Registration</h2>\n\n        <nx-form layout=\"horizontal\" labelWidth=\"120px\">\n          <nx-form-item>\n            <nx-form-label label=\"Account Type\" required=\"true\"></nx-form-label>\n            <nx-form-control>\n              <select style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n                <option>Personal</option>\n                <option>Business</option>\n                <option>Enterprise</option>\n              </select>\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"\"></nx-form-label>\n            <nx-form-control>\n              <hr style=\"margin: 16px 0; border: none; border-top: 1px solid #f0f0f0;\">\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"First Name\" required=\"true\"></nx-form-label>\n            <nx-form-control>\n              <input type=\"text\" placeholder=\"Enter first name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"Last Name\" required=\"true\"></nx-form-label>\n            <nx-form-control>\n              <input type=\"text\" placeholder=\"Enter last name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item validateStatus=\"success\" hasFeedback=\"true\">\n            <nx-form-label label=\"Email\" required=\"true\"></nx-form-label>\n            <nx-form-control>\n              <input type=\"email\" value=\"user@example.com\" style=\"width: 100%; padding: 8px; border: 1px solid #52c41a; border-radius: 6px;\">\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item validateStatus=\"error\" errorTip=\"Password is too short\" hasFeedback=\"true\">\n            <nx-form-label label=\"Password\" required=\"true\"></nx-form-label>\n            <nx-form-control>\n              <input type=\"password\" value=\"123\" style=\"width: 100%; padding: 8px; border: 1px solid #ff4d4f; border-radius: 6px;\">\n            </nx-form-control>\n            <div class=\"nx-form-item-extra\">Password must be at least 8 characters long</div>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"\"></nx-form-label>\n            <nx-form-control>\n              <hr style=\"margin: 16px 0; border: none; border-top: 1px solid #f0f0f0;\">\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"Phone\"></nx-form-label>\n            <nx-form-control>\n              <input type=\"tel\" placeholder=\"+1 (555) 000-0000\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"Company\"></nx-form-label>\n            <nx-form-control>\n              <input type=\"text\" placeholder=\"Company name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"Country\"></nx-form-label>\n            <nx-form-control>\n              <select style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n                <option>United States</option>\n                <option>Canada</option>\n                <option>United Kingdom</option>\n                <option>Australia</option>\n              </select>\n            </nx-form-control>\n          </nx-form-item>\n\n          <nx-form-item>\n            <nx-form-label label=\"\"></nx-form-label>\n            <nx-form-control>\n              <div style=\"margin-top: 24px;\">\n                <button type=\"submit\" style=\"padding: 8px 16px; background: #1890ff; color: white; border: none; border-radius: 6px; cursor: pointer; margin-right: 8px;\">Register</button>\n                <button type=\"button\" style=\"padding: 8px 16px; background: white; color: #1890ff; border: 1px solid #1890ff; border-radius: 6px; cursor: pointer;\">Cancel</button>\n              </div>\n            </nx-form-control>\n          </nx-form-item>\n        </nx-form>\n      </div>\n    `\n  })\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"vertical\" disabled=\"true\" style=\"width: 400px;\">\n        <nx-form-item>\n          <nx-form-label label=\"Name\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" value=\"John Doe\" disabled style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px; background: #f5f5f5;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Email\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"email\" value=\"john@example.com\" disabled style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px; background: #f5f5f5;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Status\"></nx-form-label>\n          <nx-form-control>\n            <select disabled style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px; background: #f5f5f5;\">\n              <option>Active</option>\n              <option>Inactive</option>\n            </select>\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-control>\n            <button type=\"submit\" disabled style=\"padding: 8px 16px; background: #d9d9d9; color: white; border: none; border-radius: 6px; cursor: not-allowed;\">Save Changes</button>\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
                },
                {
                    "name": "Horizontal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"horizontal\" labelWidth=\"120px\" style=\"width: 500px;\">\n        <nx-form-item>\n          <nx-form-label label=\"Name\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Enter your name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Email\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"email\" placeholder=\"Enter your email\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Company\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Enter your company\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"\"></nx-form-label>\n          <nx-form-control>\n            <button type=\"submit\" style=\"padding: 8px 16px; background: #1890ff; color: white; border: none; border-radius: 6px; cursor: pointer;\">Submit</button>\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
                },
                {
                    "name": "Inline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"inline\" style=\"max-width: 800px;\">\n        <nx-form-item>\n          <nx-form-label label=\"Search\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Search...\" style=\"padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Category\"></nx-form-label>\n          <nx-form-control>\n            <select style=\"padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n              <option>All</option>\n              <option>Products</option>\n              <option>Services</option>\n            </select>\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-control>\n            <button type=\"submit\" style=\"padding: 8px 16px; background: #1890ff; color: white; border: none; border-radius: 6px; cursor: pointer;\">Search</button>\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"vertical\" className=\"nx-form-large\" style=\"width: 500px;\">\n        <nx-form-item>\n          <nx-form-label label=\"Event Title\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Enter event title\" style=\"width: 100%; padding: 12px 16px; border: 1px solid #d9d9d9; border-radius: 6px; font-size: 16px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Description\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <textarea placeholder=\"Describe your event\" rows=\"6\" style=\"width: 100%; padding: 12px 16px; border: 1px solid #d9d9d9; border-radius: 6px; font-size: 16px; resize: vertical;\"></textarea>\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Organizer\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Event organizer\" style=\"width: 100%; padding: 12px 16px; border: 1px solid #d9d9d9; border-radius: 6px; font-size: 16px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-control>\n            <button type=\"submit\" style=\"padding: 12px 24px; background: #1890ff; color: white; border: none; border-radius: 6px; cursor: pointer; font-size: 16px;\">Create Event</button>\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormComponent>",
                    "defaultValue": "{\n  title: 'Components/Form',\n  component: FormComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'Form components provide a flexible and accessible way to create forms with validation, different layout modes, and responsive design.'\n      }\n    }\n  },\n  argTypes: {\n    layout: {\n      control: 'select',\n      options: ['vertical', 'horizontal', 'inline'],\n      description: 'Form layout mode'\n    },\n    colon: {\n      control: 'boolean',\n      description: 'Whether to show colon after label'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Whether to disable all form controls'\n    },\n    labelWidth: {\n      control: 'text',\n      description: 'Label width for horizontal layout (px or %)'\n    },\n    className: {\n      control: 'text',\n      description: 'Additional CSS class'\n    }\n  }\n}"
                },
                {
                    "name": "RequiredAndHelp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"vertical\" colon=\"true\" style=\"width: 400px;\">\n        <nx-form-item required=\"true\">\n          <nx-form-label label=\"Full Name\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Enter your full name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n          <div class=\"nx-form-item-extra\">Please enter your legal name as it appears on official documents</div>\n        </nx-form-item>\n\n        <nx-form-item required=\"true\">\n          <nx-form-label label=\"Email Address\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"email\" placeholder=\"you@example.com\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n          <div class=\"nx-form-item-extra\">We'll use this to contact you about your account</div>\n        </nx-form-item>\n\n        <nx-form-item required=\"true\">\n          <nx-form-label label=\"Password\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"password\" placeholder=\"Create a strong password\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n          <div class=\"nx-form-item-extra\">Must be at least 8 characters with uppercase, lowercase, and numbers</div>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Company (Optional)\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Your company name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
                },
                {
                    "name": "Responsive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"horizontal\" style=\"width: 100%; max-width: 600px;\">\n        <nx-form-item labelCol=\"{ xs: 24, sm: 8 }\" controlCol=\"{ xs: 24, sm: 16 }\">\n          <nx-form-label label=\"First Name\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"First name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item labelCol=\"{ xs: 24, sm: 8 }\" controlCol=\"{ xs: 24, sm: 16 }\">\n          <nx-form-label label=\"Last Name\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Last name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item labelCol=\"{ xs: 24, sm: 8 }\" controlCol=\"{ xs: 24, sm: 16 }\">\n          <nx-form-label label=\"Email\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"email\" placeholder=\"Email address\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item labelCol=\"{ xs: 24, sm: 8 }\" controlCol=\"{ xs: 24, sm: 16 }\">\n          <nx-form-label label=\"Bio\"></nx-form-label>\n          <nx-form-control>\n            <textarea placeholder=\"Tell us about yourself\" rows=\"4\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px; resize: vertical;\"></textarea>\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  }),\n  parameters: {\n    viewport: {\n      defaultViewport: 'responsive'\n    }\n  }\n}"
                },
                {
                    "name": "ValidationStates",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"vertical\" style=\"width: 400px;\">\n        <nx-form-item validateStatus=\"success\" hasFeedback=\"true\">\n          <nx-form-label label=\"Username\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" value=\"john_doe\" style=\"width: 100%; padding: 8px; border: 1px solid #52c41a; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item validateStatus=\"error\" errorTip=\"Please enter a valid email address\" hasFeedback=\"true\">\n          <nx-form-label label=\"Email\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"email\" value=\"invalid-email\" style=\"width: 100%; padding: 8px; border: 1px solid #ff4d4f; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item validateStatus=\"warning\" hasFeedback=\"true\">\n          <nx-form-label label=\"Password\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"password\" value=\"123\" style=\"width: 100%; padding: 8px; border: 1px solid #faad14; border-radius: 6px;\">\n          </nx-form-control>\n          <div class=\"nx-form-item-extra\">Password should be at least 8 characters</div>\n        </nx-form-item>\n\n        <nx-form-item validateStatus=\"validating\" hasFeedback=\"true\">\n          <nx-form-label label=\"Phone\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"tel\" placeholder=\"Validating...\" style=\"width: 100%; padding: 8px; border: 1px solid #1890ff; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
                },
                {
                    "name": "Vertical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FormComponent,\n        FormItemComponent,\n        FormLabelComponent,\n        FormControlComponent\n      ]\n    },\n    template: `\n      <nx-form layout=\"vertical\" style=\"width: 400px;\">\n        <nx-form-item>\n          <nx-form-label label=\"Name\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"text\" placeholder=\"Enter your name\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Email\" required=\"true\"></nx-form-label>\n          <nx-form-control>\n            <input type=\"email\" placeholder=\"Enter your email\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px;\">\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-label label=\"Message\"></nx-form-label>\n          <nx-form-control>\n            <textarea placeholder=\"Enter your message\" rows=\"4\" style=\"width: 100%; padding: 8px; border: 1px solid #d9d9d9; border-radius: 6px; resize: vertical;\"></textarea>\n          </nx-form-control>\n        </nx-form-item>\n\n        <nx-form-item>\n          <nx-form-control>\n            <button type=\"submit\" style=\"padding: 8px 16px; background: #1890ff; color: white; border: none; border-radius: 6px; cursor: pointer;\">Submit</button>\n          </nx-form-control>\n        </nx-form-item>\n      </nx-form>\n    `\n  })\n}"
                }
            ],
            "projects/ngx-unnamed/src/stories/playground.stories.ts": [
                {
                    "name": "ComponentShowcase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    imports: [CommonModule, FormsModule],\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 24px; padding: 20px; max-width: 600px;\">\n        <h3>Component Showcase</h3>\n\n        <!-- Button Showcase -->\n        <div>\n          <h4>Buttons</h4>\n          <div style=\"display: flex; gap: 8px; flex-wrap: wrap; margin-bottom: 16px;\">\n            <button nx-button [nxVariant]=\"buttonVariant\" [nxSize]=\"buttonSize\" [disabled]=\"buttonDisabled\" [nxLoading]=\"buttonLoading\">\n              <span nxIcon type=\"user\" theme=\"outline\"></span>\n              {{ buttonText }}\n            </button>\n            <button nx-button nxVariant=\"secondary\" (click)=\"randomizeButton()\">Randomize</button>\n          </div>\n\n          <div style=\"display: flex; gap: 12px; align-items: center;\">\n            <label>Variant:</label>\n            <select [(ngModel)]=\"buttonVariant\" style=\"padding: 4px;\">\n              <option value=\"primary\">Primary</option>\n              <option value=\"secondary\">Secondary</option>\n              <option value=\"danger\">Danger</option>\n              <option value=\"outline\">Outline</option>\n              <option value=\"ghost\">Ghost</option>\n            </select>\n\n            <label>Size:</label>\n            <select [(ngModel)]=\"buttonSize\" style=\"padding: 4px;\">\n              <option value=\"small\">Small</option>\n              <option value=\"default\">Default</option>\n              <option value=\"large\">Large</option>\n            </select>\n\n            <label><input type=\"checkbox\" [(ngModel)]=\"buttonDisabled\"> Disabled</label>\n            <label><input type=\"checkbox\" [(ngModel)]=\"buttonLoading\"> Loading</label>\n          </div>\n\n          <div style=\"margin-top: 8px;\">\n            <input nx-input placeholder=\"Button text\" [(ngModel)]=\"buttonText\" style=\"max-width: 200px;\">\n          </div>\n        </div>\n\n        <!-- Input Showcase -->\n        <div>\n          <h4>Inputs</h4>\n          <div style=\"display: flex; gap: 12px; margin-bottom: 16px;\">\n            <input nx-input [placeholder]=\"inputPlaceholder\" [nxSize]=\"inputSize\" [disabled]=\"inputDisabled\" [nxStatus]=\"inputStatus\" [(ngModel)]=\"inputValue\">\n            <button nx-button nxVariant=\"outline\" (click)=\"clearInput()\">Clear</button>\n          </div>\n\n          <div style=\"display: flex; gap: 12px; align-items: center;\">\n            <label>Size:</label>\n            <select [(ngModel)]=\"inputSize\" style=\"padding: 4px;\">\n              <option value=\"small\">Small</option>\n              <option value=\"default\">Default</option>\n              <option value=\"large\">Large</option>\n            </select>\n\n            <label>Status:</label>\n            <select [(ngModel)]=\"inputStatus\" style=\"padding: 4px;\">\n              <option value=\"default\">Default</option>\n              <option value=\"error\">Error</option>\n              <option value=\"warning\">Warning</option>\n            </select>\n\n            <label><input type=\"checkbox\" [(ngModel)]=\"inputDisabled\"> Disabled</label>\n          </div>\n\n          <div style=\"margin-top: 8px;\">\n            <input nx-input placeholder=\"Placeholder text\" [(ngModel)]=\"inputPlaceholder\" style=\"max-width: 200px;\">\n          </div>\n        </div>\n\n        <!-- Icon Showcase -->\n        <div>\n          <h4>Icons</h4>\n          <div style=\"display: flex; gap: 16px; align-items: center; margin-bottom: 16px;\">\n            <span nxIcon [type]=\"selectedIcon\" [theme]=\"iconTheme\" [spin]=\"iconSpin\" [size]=\"iconSize\"></span>\n            <span>{{ selectedIcon }} ({{ iconTheme }})</span>\n          </div>\n\n          <div style=\"display: flex; gap: 12px; align-items: center; flex-wrap: wrap;\">\n            <label>Icon:</label>\n            <select [(ngModel)]=\"selectedIcon\" style=\"padding: 4px;\">\n              <option value=\"user\">User</option>\n              <option value=\"setting\">Settings</option>\n              <option value=\"heart\">Heart</option>\n              <option value=\"star\">Star</option>\n              <option value=\"check\">Check</option>\n              <option value=\"close\">Close</option>\n              <option value=\"loading\">Loading</option>\n            </select>\n\n            <label>Theme:</label>\n            <select [(ngModel)]=\"iconTheme\" style=\"padding: 4px;\">\n              <option value=\"outline\">Outline</option>\n              <option value=\"fill\">Fill</option>\n              <option value=\"twotone\">Twotone</option>\n            </select>\n\n            <label>Size:</label>\n            <input type=\"number\" [(ngModel)]=\"iconSize\" min=\"12\" max=\"48\" style=\"width: 60px; padding: 4px;\">\n\n            <label><input type=\"checkbox\" [(ngModel)]=\"iconSpin\"> Spin</label>\n          </div>\n        </div>\n      </div>\n    `,\n    props: {\n      // Button props\n      buttonText: 'Click Me',\n      buttonVariant: 'primary',\n      buttonSize: 'default',\n      buttonDisabled: false,\n      buttonLoading: false,\n\n      // Input props\n      inputValue: '',\n      inputPlaceholder: 'Type something...',\n      inputSize: 'default',\n      inputStatus: 'default',\n      inputDisabled: false,\n\n      // Icon props\n      selectedIcon: 'user',\n      iconTheme: 'outline',\n      iconSize: 24,\n      iconSpin: false,\n\n      // Methods\n      randomizeButton() {\n        const variants = ['primary', 'secondary', 'danger', 'outline', 'ghost'];\n        const sizes = ['small', 'default', 'large'];\n        const texts = ['Click Me', 'Submit', 'Save', 'Cancel', 'Delete'];\n\n        this.buttonVariant = variants[Math.floor(Math.random() * variants.length)];\n        this.buttonSize = sizes[Math.floor(Math.random() * sizes.length)];\n        this.buttonText = texts[Math.floor(Math.random() * texts.length)];\n        this.buttonDisabled = Math.random() > 0.5;\n        this.buttonLoading = Math.random() > 0.7;\n      },\n\n      clearInput() {\n        this.inputValue = '';\n      }\n    }\n  }),\n}"
                },
                {
                    "name": "InteractiveForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    imports: [CommonModule, FormsModule],\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; max-width: 400px; padding: 20px;\">\n        <h3>Interactive Form</h3>\n\n        <div style=\"display: flex; flex-direction: column; gap: 8px;\">\n          <label for=\"username\">Username</label>\n          <input nx-input id=\"username\" placeholder=\"Enter username\" [(ngModel)]=\"username\">\n        </div>\n\n        <div style=\"display: flex; flex-direction: column; gap: 8px;\">\n          <label for=\"email\">Email</label>\n          <input nx-input id=\"email\" type=\"email\" placeholder=\"Enter email\" [(ngModel)]=\"email\">\n        </div>\n\n        <div style=\"display: flex; flex-direction: column; gap: 8px;\">\n          <label for=\"password\">Password</label>\n          <input nx-input id=\"password\" type=\"password\" placeholder=\"Enter password\" [(ngModel)]=\"password\">\n        </div>\n\n        <div style=\"display: flex; gap: 8px; margin-top: 16px;\">\n          <button nx-button nxVariant=\"primary\" (click)=\"submitForm()\">Submit</button>\n          <button nx-button nxVariant=\"outline\" (click)=\"resetForm()\">Reset</button>\n        </div>\n\n        <div *ngIf=\"submittedData\" style=\"margin-top: 16px; padding: 12px; background: #f5f5f5; border-radius: 4px;\">\n          <strong>Form Data:</strong>\n          <pre>{{ submittedData | json }}</pre>\n        </div>\n      </div>\n    `,\n    props: {\n      username: '',\n      email: '',\n      password: '',\n      submittedData: null,\n      submitForm() {\n        this.submittedData = {\n          username: this.username,\n          email: this.email,\n          password: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢'\n        };\n      },\n      resetForm() {\n        this.username = '';\n        this.email = '';\n        this.password = '';\n        this.submittedData = null;\n      }\n    }\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\n  title: 'Playground/Interactive Examples',\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'Interactive playground examples demonstrating component integration and real-world usage patterns.',\n      },\n    },\n  },\n  }"
                },
                {
                    "name": "ShowCode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"padding: 20px; max-width: 600px;\">\n        <h3>Show Code Example</h3>\n        <p>Click the \"Show code\" button in Storybook to see the source code for these examples.</p>\n\n        <div style=\"margin: 20px 0;\">\n          <h4>Basic Usage</h4>\n          <button nx-button>Primary Button</button>\n          <button nx-button nxVariant=\"secondary\">Secondary Button</button>\n        </div>\n\n        <div style=\"margin: 20px 0;\">\n          <h4>With Icons</h4>\n          <button nx-button>\n            <span nxIcon type=\"user\" theme=\"outline\"></span>\n            User Profile\n          </button>\n          <button nx-button nxVariant=\"danger\">\n            <span nxIcon type=\"delete\" theme=\"outline\"></span>\n            Delete\n          </button>\n        </div>\n\n        <div style=\"margin: 20px 0;\">\n          <h4>Form Elements</h4>\n          <input nx-input placeholder=\"Enter text here\">\n          <button nx-button nxVariant=\"outline\" style=\"margin-left: 8px;\">Submit</button>\n        </div>\n      </div>\n    `\n  }),\n}"
                }
            ],
            "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts": [
                {
                    "name": "Confirmation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Confirm Action',\n        nxOkDanger: false,\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [nxOkDanger]=\"nxOkDanger\"\n                [visible]=\"visible\">\n\n                <p>Are you sure you want to perform this action?</p>\n                <p>This action cannot be undone.</p>\n            </nx-modal>\n        `,\n    }),\n}"
                },
                {
                    "name": "CustomFooter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Custom Footer Modal',\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [visible]=\"visible\">\n\n                <p>This modal has a custom footer with additional actions.</p>\n\n                <ng-template #footer>\n                    <button nx-button nxVariant=\"ghost\">Previous</button>\n                    <button nx-button nxVariant=\"secondary\">Save Draft</button>\n                    <button nx-button nxVariant=\"primary\">Submit</button>\n                </ng-template>\n            </nx-modal>\n        `,\n    }),\n}"
                },
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Delete Confirmation',\n        nxOkDanger: true,\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [nxOkDanger]=\"nxOkDanger\"\n                [visible]=\"visible\">\n\n                <p><strong>Warning:</strong> This will permanently delete the selected item.</p>\n                <p>Are you sure you want to continue?</p>\n            </nx-modal>\n        `,\n    }),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        nxTitle: 'Basic Modal',\n        visible: true,\n        nxSize: 'default',\n        nxMask: true,\n        nxMaskClosable: true,\n        nxKeyboard: true,\n        nxOkText: 'OK',\n        nxCancelText: 'Cancel',\n        nxOkDanger: false,\n        nxLoading: false,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [nxSize]=\"nxSize\"\n                [nxMask]=\"nxMask\"\n                [nxMaskClosable]=\"nxMaskClosable\"\n                [nxKeyboard]=\"nxKeyboard\"\n                [nxOkText]=\"nxOkText\"\n                [nxCancelText]=\"nxCancelText\"\n                [nxOkDanger]=\"nxOkDanger\"\n                [nxLoading]=\"nxLoading\"\n                [visible]=\"visible\"\n                (nxOnOk)=\"onOk()\"\n                (nxOnCancel)=\"onCancel()\"\n                (nxOnClose)=\"onClose()\">\n\n                <p>This is the modal content. You can put any content here including forms, text, or other components.</p>\n                <p>Modals are great for confirmation dialogs, forms, or important information that requires user attention.</p>\n            </nx-modal>\n\n            <div style=\"text-align: center; margin-top: 20px;\">\n                <button nx-button (click)=\"visible = true\">Open Modal</button>\n            </div>\n        `,\n    }),\n}"
                },
                {
                    "name": "Fullscreen",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Fullscreen Modal',\n        nxSize: 'fullscreen',\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [nxSize]=\"nxSize\"\n                [visible]=\"visible\">\n\n                <div style=\"text-align: center; padding: 50px;\">\n                    <h2>Fullscreen Modal</h2>\n                    <p>This modal takes up the entire viewport.</p>\n                    <p>Perfect for:</p>\n                    <ul style=\"text-align: left; display: inline-block;\">\n                        <li>Image galleries</li>\n                        <li>Video players</li>\n                        <li>Complex forms</li>\n                        <li>Document viewers</li>\n                    </ul>\n                </div>\n            </nx-modal>\n        `,\n    }),\n}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    render: InteractiveTemplate,\n    parameters: {\n        docs: {\n            description: {\n                story: 'Interactive demo showing different modal sizes and behaviors.',\n            },\n        },\n    },\n}"
                },
                {
                    "name": "InteractiveTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<ModalComponent>",
                    "defaultValue": "(args) => ({\n    props: {\n        ...args,\n        isVisible: false,\n        modalSize: 'default',\n        handleOk: () => {\n            console.log('Modal OK clicked');\n            args.visible = false;\n        },\n        handleCancel: () => {\n            console.log('Modal Cancel clicked');\n            args.visible = false;\n        },\n        handleClose: () => {\n            console.log('Modal closed');\n            args.visible = false;\n        },\n    },\n    template: `\n        <div style=\"text-align: center; padding: 40px;\">\n            <h2>Interactive Modal Demo</h2>\n            <p>Click the buttons below to open different modal configurations:</p>\n\n            <div style=\"display: flex; gap: 12px; justify-content: center; flex-wrap: wrap; margin-top: 20px;\">\n                <button nx-button (click)=\"isVisible = true; modalSize = 'small'\">Small Modal</button>\n                <button nx-button (click)=\"isVisible = true; modalSize = 'default'\">Default Modal</button>\n                <button nx-button (click)=\"isVisible = true; modalSize = 'large'\">Large Modal</button>\n                <button nx-button (click)=\"isVisible = true; modalSize = 'fullscreen'\">Fullscreen Modal</button>\n            </div>\n\n            <nx-modal\n                [nxTitle]=\"'Interactive Modal (' + modalSize + ')'\"\n                [nxSize]=\"modalSize\"\n                [visible]=\"isVisible\"\n                (nxOnOk)=\"handleOk()\"\n                (nxOnCancel)=\"handleCancel()\"\n                (nxOnClose)=\"handleClose()\">\n\n                <h3>Modal Content</h3>\n                <p>This is an interactive modal with size: <strong>{{modalSize}}</strong></p>\n                <p>You can close this modal by:</p>\n                <ul style=\"text-align: left;\">\n                    <li>Clicking the OK or Cancel buttons</li>\n                    <li>Clicking the √ó close button</li>\n                    <li>Pressing the Escape key</li>\n                    <li>Clicking the backdrop (if enabled)</li>\n                </ul>\n            </nx-modal>\n        </div>\n    `,\n})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Large Modal',\n        nxSize: 'large',\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [nxSize]=\"nxSize\"\n                [visible]=\"visible\">\n\n                <h3>Large Modal Content</h3>\n                <p>This modal has more space for complex content.</p>\n                <p>You can include:</p>\n                <ul>\n                    <li>Detailed forms</li>\n                    <li>Tables with data</li>\n                    <li>Complex workflows</li>\n                    <li>Rich content with images</li>\n                </ul>\n                <p>The large size provides 880px width for your content.</p>\n            </nx-modal>\n        `,\n    }),\n}"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Processing',\n        nxLoading: true,\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [nxLoading]=\"nxLoading\"\n                [visible]=\"visible\">\n\n                <p>Please wait while we process your request...</p>\n                <p>This may take a few moments.</p>\n            </nx-modal>\n        `,\n    }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ModalComponent>",
                    "defaultValue": "{\n    title: 'Components/Modal',\n    component: ModalComponent,\n    tags: ['autodocs'],\n    decorators: [\n        moduleMetadata({\n            imports: [\n                CommonModule,\n                FormsModule,\n                ModalComponent,\n                ButtonComponent,\n            ],\n        }),\n    ],\n    argTypes: {\n        nxTitle: {\n            control: 'text',\n            description: 'Modal title text',\n        },\n        nxSize: {\n            control: 'select',\n            options: ['small', 'default', 'large', 'fullscreen'],\n            description: 'Modal size',\n        },\n        nxMask: {\n            control: 'boolean',\n            description: 'Whether to show backdrop mask',\n        },\n        nxMaskClosable: {\n            control: 'boolean',\n            description: 'Whether clicking mask closes modal',\n        },\n        nxKeyboard: {\n            control: 'boolean',\n            description: 'Whether ESC key closes modal',\n        },\n        nxOkText: {\n            control: 'text',\n            description: 'OK button text',\n        },\n        nxCancelText: {\n            control: 'text',\n            description: 'Cancel button text',\n        },\n        nxOkDanger: {\n            control: 'boolean',\n            description: 'Whether OK button has danger styling',\n        },\n        nxLoading: {\n            control: 'boolean',\n            description: 'Whether OK button shows loading state',\n        },\n    },\n    parameters: {\n        layout: 'centered',\n        docs: {\n            description: {\n                component: 'Modal dialog component with customizable content, size, and actions.',\n            },\n        },\n    },\n}"
                },
                {
                    "name": "NoMask",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Frameless Modal',\n        nxMask: false,\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <div style=\"background: #f5f5f5; padding: 20px; border-radius: 8px;\">\n                <p>This is the background content.</p>\n                <p>The modal below has no backdrop mask.</p>\n\n                <nx-modal\n                    [nxTitle]=\"nxTitle\"\n                    [nxMask]=\"nxMask\"\n                    [visible]=\"visible\">\n\n                    <p>This modal floats above the content without a mask.</p>\n                </nx-modal>\n            </div>\n        `,\n    }),\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        ...Default.args,\n        nxTitle: 'Small Modal',\n        nxSize: 'small',\n        visible: true,\n    },\n    render: (args) => ({\n        props: args,\n        template: `\n            <nx-modal\n                [nxTitle]=\"nxTitle\"\n                [nxSize]=\"nxSize\"\n                [visible]=\"visible\">\n\n                <p>This is a small modal with compact content.</p>\n            </nx-modal>\n        `,\n    }),\n}"
                }
            ],
            "projects/ngx-unnamed/src/stories/button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  title: 'Example/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\n  args: { onClick: fn() },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
                }
            ],
            "projects/ngx-unnamed/src/stories/header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeaderComponent>",
                    "defaultValue": "{\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n  args: {\n    onLogin: fn(),\n    onLogout: fn(),\n    onCreateAccount: fn(),\n  },\n}"
                }
            ],
            "projects/ngx-unnamed/src/stories/page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PageComponent>",
                    "defaultValue": "{\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "projects/ngx-unnamed/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-unnamed/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n       color: /(background|color)$/i,\n       date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/ngx-unnamed/src/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/ngx-unnamed/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/ngx-unnamed/src/stories/header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderComponent>",
                    "file": "projects/ngx-unnamed/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/ngx-unnamed/src/stories/page.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PageComponent>",
                    "file": "projects/ngx-unnamed/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/ngx-unnamed/src/stories/playground.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AlertComponent>",
                    "file": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputDirective>",
                    "file": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/ngx-unnamed/src/lib/components/form/form.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormComponent>",
                    "file": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectComponent>",
                    "file": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/ngx-unnamed/src/lib/components/table/table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ModalComponent>",
                    "file": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "children": []
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ngx-unnamed/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Banner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BannerExamples",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Closable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithActionTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithContentProjection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithMessageInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/alert/alert.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllSizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Block",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Circle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dashed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Ghost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InteractiveStates",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Link",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Round",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/button/button.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Compact",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ComplexForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Horizontal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Inline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RequiredAndHelp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Responsive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ValidationStates",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Vertical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/form/form.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllSizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllStates",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Email",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Number",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Password",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Readonly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithHelperText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/input/input.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Confirmation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomFooter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Fullscreen",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InteractiveTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoMask",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/modal/modal.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Clearable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Multiple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sampleOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tags",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithSearch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/select/select.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "advancedColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "basicColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Bordered",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Complex",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTemplates",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InteractiveDemo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Paginated",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Responsive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RowSelection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sampleData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SingleSelection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sortable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Striped",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/lib/components/table/table.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/button.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/header.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/page.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ComponentShowcase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InteractiveForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ShowCode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-unnamed/src/stories/playground.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}