// =============================================================================
// UNNAMED UI - Button Component Styles
// =============================================================================
// Use @import instead of @use to avoid module scope conflicts when imported into global.scss

@import '../../../style/themes';
@import '../../../style/mixins';

$btn-prefix-cls: nx-btn;

// Button Base Styles
.#{$btn-prefix-cls} {
    @include btn-base();

    // Fix loading button animation
    > span {
        display: inline-block;
    }

    // Icon alignment and spacing
    .nx-btn-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        vertical-align: middle;
    }

    // Icon spacing when button has text
    &-with-icon:not(&-icon-only) {
        .nx-btn-icon {
            margin-right: 8px;
        }
    }

    // Primary Button
    &-primary {
        @include btn-primary();
    }

    // Secondary Button
    &-secondary {
        @include btn-secondary();
    }

    // Dashed Button
    &-dashed {
        @include btn-dashed();
    }

    // Danger Button
    &-danger {
        @include btn-danger();
    }

    // Outline Button
    &-outline {
        @include btn-outline();
    }

    // Ghost Button
    &-ghost {
        @include btn-ghost();
    }

    // Link Button
    &-link {
        @include btn-link();
    }

    // Round Shape
    &-round {
        @include btn-round();
    }

    // Circle Shape
    &-circle {
        @include btn-circle();
    }

    // Block Layout
    &-block {
        @include btn-block();
    }

    // Loading State
    &.#{$btn-prefix-cls}-loading {
        position: relative;
        cursor: default;

        &::before {
            position: absolute;
            top: -$btn-border-width;
            right: -$btn-border-width;
            bottom: -$btn-border-width;
            left: -$btn-border-width;
            z-index: 1;
            display: block;
            background: $component-background;
            border-radius: inherit;
            opacity: 0.35;
            transition: opacity 0.2s;
            content: '';
            pointer-events: none;
        }
    }

    // Loading Icon
    .spinner {
        display: inline-block;
        width: 14px;
        height: 14px;
        margin-right: 8px;
        border: 2px solid currentColor;
        border-top-color: transparent;
        border-radius: 50%;
        animation: spin 0.6s linear infinite;
    }
}

// Link button styles for anchor tags
a.#{$btn-prefix-cls} {
    padding-top: 0.01px !important;
    line-height: $btn-height-base - 2px;

    &[disabled] {
        cursor: not-allowed;

        &,
        &:hover,
        &:focus,
        &:active {
            color: $btn-disable-color;
            background: transparent;
            border-color: transparent;
            text-shadow: none;
            box-shadow: none;
        }
    }

    &-lg {
        line-height: $btn-height-lg - 2px;
    }

    &-sm {
        line-height: $btn-height-sm - 2px;
    }
}

// Loading Spinner Animation
@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}
